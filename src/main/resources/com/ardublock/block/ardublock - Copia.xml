<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE BlockLangDef SYSTEM "lang_def.dtd">
<!-- This describes every BlockGenus, BlockDrawer, BlockFamily. 
Note: For BlockGenus, if genus A relies on another genus B, that genus B 
must be specified in the xml file before genus A is specified./ We impose 
this requirement so that sanity checks can be made regarding the validity 
of a default argument when the BlockGenuses are first loaded. -->
<BlockLangDef>

    <BlockConnectorShapes>
        <BlockConnectorShape shape-type="number" shape-number="1" />
        <BlockConnectorShape shape-type="number-list" shape-number="2" />
        <BlockConnectorShape shape-type="number-inv" shape-number="3" />
        <BlockConnectorShape shape-type="boolean" shape-number="4" />
        <BlockConnectorShape shape-type="boolean-list" shape-number="5" />
        <BlockConnectorShape shape-type="boolean-inv" shape-number="6" />
        <BlockConnectorShape shape-type="string" shape-number="7" />
        <BlockConnectorShape shape-type="string-list" shape-number="8" />
        <BlockConnectorShape shape-type="string-inv" shape-number="9" />
        <BlockConnectorShape shape-type="poly" shape-number="10" />
        <BlockConnectorShape shape-type="poly-list" shape-number="11" />
        <BlockConnectorShape shape-type="poly-inv" shape-number="12" />
        <BlockConnectorShape shape-type="proc-param" shape-number="13" />
        <BlockConnectorShape shape-type="cmd" shape-number="14" />
    </BlockConnectorShapes>

    <BlockGenuses>
        <BlockGenus name="dummy" kind="command" initlabel="" color="0 0 0" />

        <!-- ******************** Functions *************** -->

        <BlockGenus name="setup" kind="command" color="255 128 0" initlabel="bg.setup" is-starter="yes" is-terminator="yes" label-unique="yes">
            <description>
                <text>Configuração do CLP, só é executado uma vez ao ligar</text>
            </description>
            <BlockConnectors>
                <BlockConnector connector-type="cmd" connector-kind="socket" label="bc.do" />
            </BlockConnectors>
        </BlockGenus>
                
        <BlockGenus name="setupWifi" kind="command" color="255 128 0" initlabel="bg.setupWifi" label-unique="yes">
            <description>
                <text>Permite conectar o CLP a Wi-Fi</text>
            </description>
            <BlockConnectors>
                <BlockConnector connector-type="string" connector-kind="socket" label="bc.wifiName" >
                    <DefaultArg genus-name="message" label="nome" />
                </BlockConnector>
                <BlockConnector connector-type="string" connector-kind="socket" label="bc.wifiPass" >
                    <DefaultArg genus-name="message" label="senha" />
                </BlockConnector>
            </BlockConnectors>
        </BlockGenus>

        <BlockGenus name="loop" kind="command" color="255 128 0" initlabel="bg.loop" is-starter="yes" is-terminator="yes" label-unique="yes">
            <description>
                <text>Comandos que serão executados durante todo o período que o CLP estiver ligado</text>
            </description>
            <BlockConnectors>
                <BlockConnector connector-type="cmd" connector-kind="socket" label="bc.do" />
            </BlockConnectors>
        </BlockGenus>

        <BlockGenus name="subroutine" kind="command" color="255 128 0" initlabel="bg.subroutine" is-starter="yes" is-terminator="yes" label-unique="yes" editable-label="yes">
            <description>
                <text>subroutine</text>
            </description>
            <BlockConnectors>
                <BlockConnector label="bc.commands" connector-type="cmd" connector-kind="socket" />
            </BlockConnectors>
        </BlockGenus>

        <BlockGenus name="subroutine-ref" kind="command" color="255 128 0" initlabel="bg.subroutine" editable-label="yes">
            <description>
                <text>invoke subroutine</text>
            </description>
        </BlockGenus>

        <BlockGenus name="subroutine_var" kind="command" color="255 128 0" initlabel="bg.subroutine_var" is-starter="yes" is-terminator="yes" label-unique="yes" editable-label="yes">
            <BlockConnectors>
                <BlockConnector connector-type="number" connector-kind="socket" label="">
                    <DefaultArg genus-name="ref_var" label="value" />
                </BlockConnector>
                <BlockConnector label="bc.commands" connector-type="cmd" connector-kind="socket" />
            </BlockConnectors>
        </BlockGenus>

        <BlockGenus name="subroutine-ref_var" kind="command" color="255 128 0" initlabel="bg.subroutine_var" editable-label="yes">
            <BlockConnectors>
                <BlockConnector connector-type="number" connector-kind="socket" label="bc.variable">
                    <DefaultArg genus-name="number" label="2" />
                </BlockConnector>
            </BlockConnectors>
        </BlockGenus>

        <BlockGenus name="ref_var" kind="data" color="0 135 135" initlabel="bg.ref_var" editable-label="yes">
            <BlockConnectors>
                <BlockConnector connector-type="number" connector-kind="plug" position-type="mirror" />
            </BlockConnectors>
        </BlockGenus>

        <!-- ******************** Control Structures *************** -->

        <BlockGenus name="if" kind="command" initlabel="bg.if" color="255 221 0">
            <description>
                <text>
                    If
                    <arg n="1" />
                    is true, the agent will run the blocks attached to
                    <arg n="2" />
                </text>
                <arg-description n="1" name="test">
                    The condition being
                    tested.
                </arg-description>

                <arg-description n="2" name="then">
                    The set of instructions
                    that is done when the condition is true.
                </arg-description>
            </description>
            <BlockConnectors>
                <BlockConnector label="bc.test" connector-kind="socket" connector-type="boolean" />
                <BlockConnector label="bc.then" connector-kind="socket" connector-type="cmd" />
            </BlockConnectors>
        </BlockGenus>

        <BlockGenus name="ifelse" kind="command" initlabel="bg.ifelse" color="255 221 0">
            <description>
                <text>
                    Does the first set of commands if the condition specified is
                    true, otherwise it will do the second set of commands.
                </text>
                <arg-description n="1" name="test">
                    The condition being
                    tested.
                </arg-description>

                <arg-description n="2" name="then">
                    The set of instructions
                    that is done when the condition is true.
                </arg-description>

                <arg-description n="3" name="else">
                    The set of instructions
                    that is done when the condition is false.
                </arg-description>
            </description>
            <BlockConnectors>
                <BlockConnector label="bc.test" connector-kind="socket" connector-type="boolean" />
                <BlockConnector label="bc.then" connector-kind="socket" connector-type="cmd" />
                <BlockConnector label="bc.else" connector-kind="socket" connector-type="cmd" />
            </BlockConnectors>
        </BlockGenus>

        <BlockGenus name="while" kind="command" initlabel="bg.while" color="255 221 0">
            <description>
                <text>
                    While Block
                </text>
            </description>
            <BlockConnectors>
                <BlockConnector label="bc.while" connector-kind="socket" connector-type="boolean" />
                <BlockConnector label="bc.commands" connector-kind="socket" connector-type="cmd" />
            </BlockConnectors>
        </BlockGenus>

        <BlockGenus name="do_while" kind="command" initlabel="bg.do_while" color="255 221 0">
            <description>
                <text>
                    Do While Block
                </text>
            </description>
            <BlockConnectors>
                <BlockConnector label="bc.commands" connector-kind="socket" connector-type="cmd" />
                <BlockConnector label="bc.while" connector-kind="socket" connector-type="boolean">
                    <DefaultArg genus-name="less" label="Pick a test" />
                </BlockConnector>    
            </BlockConnectors>
        </BlockGenus> 

        <BlockGenus name="repeat_times" kind="command" color="255 221 0" initlabel="bg.repeat_times">
            <description>
                <text>Repeat the commands for "times"</text>
            </description>
            <BlockConnectors>
                <BlockConnector connector-type="number" connector-kind="socket" label="bc.repeat_times">
                    <DefaultArg genus-name="number" label="5" />
                </BlockConnector>
                <BlockConnector label="bc.commands" connector-type="cmd" connector-kind="socket" />
            </BlockConnectors>
        </BlockGenus>

        <BlockGenus name="repeat" kind="command" color="255 221 0" initlabel="bg.repeat">
            <description>
                <text>repeat</text>
            </description>
            <BlockConnectors>
                <BlockConnector connector-type="number" connector-kind="socket" label="bc.variable">
                    <DefaultArg genus-name="variable_number" label="variable name" />
                </BlockConnector>
                <BlockConnector connector-type="number" connector-kind="socket" label="bc.repeat_times">
                    <DefaultArg genus-name="number" label="5" />
                </BlockConnector>
                <BlockConnector label="bc.commands" connector-type="cmd" connector-kind="socket" />
            </BlockConnectors>
        </BlockGenus>

        <BlockGenus name="repeat_control" kind="command" color="255 221 0" initlabel="bg.repeat_control">
            <description>
                <text>repeat</text>
            </description>
            <BlockConnectors>
                <BlockConnector connector-type="number" connector-kind="socket" label="bc.variable">
                    <DefaultArg genus-name="variable_number" label="variable name" />
                </BlockConnector>
                <BlockConnector connector-type="number" connector-kind="socket" label="bc.start">
                    <DefaultArg genus-name="number" label="1" />
                </BlockConnector>
                <BlockConnector connector-type="number" connector-kind="socket" label="bc.end">
                    <DefaultArg genus-name="number" label="5" />
                </BlockConnector>
                <BlockConnector connector-type="number" connector-kind="socket" label="bc.increment">
                    <DefaultArg genus-name="number" label="1" />
                </BlockConnector>
                <BlockConnector label="commands" connector-type="cmd" connector-kind="socket" />
            </BlockConnectors>
        </BlockGenus>

        <BlockGenus name="break" kind="command" color="255 221 0" initlabel="bg.break">
            <description>
                <text>Repeat the commands for "times"</text>
            </description>
        </BlockGenus>

        <!--****************** Tests (Logical Operators) *************** -->

        <BlockGenus name="true" kind="data" initlabel="bg.true" color="204 153 255" editable-label="no">
            <description>
                <text>
                    Reports the boolean true.
                </text>
            </description>
            <BlockConnectors>
                <BlockConnector connector-kind="plug" connector-type="boolean" position-type="mirror" />
            </BlockConnectors>
        </BlockGenus>

        <BlockGenus name="false" kind="data" initlabel="bg.false" color="204 153 255">
            <description>
                <text>
                    Reports the boolean false.
                </text>
            </description>
            <BlockConnectors>
                <BlockConnector connector-kind="plug" connector-type="boolean" position-type="mirror" />
            </BlockConnectors>
        </BlockGenus>

        <BlockGenus name="greater" kind="function" color="127 255 0" initlabel="bg.greater">
            <description>
                <text>is upper number greater then lower?</text>
            </description>
            <BlockConnectors>
                <BlockConnector connector-type="boolean" connector-kind="plug" position-type="mirror" >
                    <!-- CLUDGE:: This apparently daft line enables 'clone' to work correctly on this BlockGenus -->
                    <DefaultArg genus-name="dummy" label="" />
                </BlockConnector>
                <BlockConnector connector-type="number" connector-kind="socket" position-type="bottom" />
                <BlockConnector connector-type="number" connector-kind="socket" position-type="bottom" />
            </BlockConnectors>
        </BlockGenus>

        <BlockGenus name="less" kind="function" color="127 255 0" initlabel="bg.less">
            <description>
                <text>is upper number less then lower?</text>
            </description>
            <BlockConnectors>
                <BlockConnector connector-type="boolean" connector-kind="plug" position-type="mirror" >
                    <!-- CLUDGE:: This apparently daft line enables 'clone' to work correctly on this BlockGenus -->
                    <DefaultArg genus-name="dummy" label="" />
                </BlockConnector>
                <BlockConnector connector-type="number" connector-kind="socket" position-type="bottom" />
                <BlockConnector connector-type="number" connector-kind="socket" position-type="bottom" />
            </BlockConnectors>
        </BlockGenus>

        <BlockGenus name="equal" kind="function" color="127 255 0" initlabel="bg.equal">
            <description>
                <text>is upper number greater then lower?</text>
            </description>
            <BlockConnectors>
                <BlockConnector connector-type="boolean" connector-kind="plug" position-type="mirror" >
                    <!-- CLUDGE:: This apparently daft line enables 'clone' to work correctly on this BlockGenus -->
                    <DefaultArg genus-name="dummy" label="" />
                </BlockConnector>
                <BlockConnector connector-type="number" connector-kind="socket" position-type="bottom" />
                <BlockConnector connector-type="number" connector-kind="socket" position-type="bottom" />
            </BlockConnectors>
        </BlockGenus>

        <BlockGenus name="greater_equal" kind="function" color="127 255 0" initlabel="bg.greater_equal">
            <description>
                <text>is upper number greater then lower?</text>
            </description>
            <BlockConnectors>
                <BlockConnector connector-type="boolean" connector-kind="plug" position-type="mirror" >
                    <!-- CLUDGE:: This apparently daft line enables 'clone' to work correctly on this BlockGenus -->
                    <DefaultArg genus-name="dummy" label="" />
                </BlockConnector>
                <BlockConnector connector-type="number" connector-kind="socket" position-type="bottom" />
                <BlockConnector connector-type="number" connector-kind="socket" position-type="bottom" />
            </BlockConnectors>
        </BlockGenus>

        <BlockGenus name="less_equal" kind="function" color="127 255 0" initlabel="bg.less_equal">
            <description>
                <text>is upper number greater then lower?</text>
            </description>
            <BlockConnectors>
                <BlockConnector connector-type="boolean" connector-kind="plug" position-type="mirror" >
                    <!-- CLUDGE:: This apparently daft line enables 'clone' to work correctly on this BlockGenus -->
                    <DefaultArg genus-name="dummy" label="" />
                </BlockConnector>
                <BlockConnector connector-type="number" connector-kind="socket" position-type="bottom" />
                <BlockConnector connector-type="number" connector-kind="socket" position-type="bottom" />
            </BlockConnectors>
        </BlockGenus>

        <BlockGenus name="not_equal" kind="function" color="127 255 0" initlabel="bg.not_equal">
            <description>
                <text>is upper number greater then lower?</text>
            </description>
            <BlockConnectors>
                <BlockConnector connector-type="boolean" connector-kind="plug" position-type="mirror" >
                    <!-- CLUDGE:: This apparently daft line enables 'clone' to work correctly on this BlockGenus -->
                    <DefaultArg genus-name="dummy" label="" />
                </BlockConnector>
                <BlockConnector connector-type="number" connector-kind="socket" position-type="bottom" />
                <BlockConnector connector-type="number" connector-kind="socket" position-type="bottom" />
            </BlockConnectors>
        </BlockGenus>

        <BlockGenus name="equal_digital" kind="function" color="127 255 0" initlabel="bg.equal_digital">
            <description>
                <text>is upper number greater then lower?</text>
            </description>
            <BlockConnectors>
                <BlockConnector connector-type="boolean" connector-kind="plug" position-type="mirror" >
                    <!-- CLUDGE:: This apparently daft line enables 'clone' to work correctly on this BlockGenus -->
                    <DefaultArg genus-name="dummy" label="" />
                </BlockConnector>
                <BlockConnector connector-type="boolean" connector-kind="socket" position-type="bottom" />
                <BlockConnector connector-type="boolean" connector-kind="socket" position-type="bottom" />
            </BlockConnectors>
        </BlockGenus>

        <BlockGenus name="not_equal_digital" kind="function" color="127 255 0" initlabel="bg.not_equal_digital">
            <description>
                <text>is upper number greater then lower?</text>
            </description>
            <BlockConnectors>
                <BlockConnector connector-type="boolean" connector-kind="plug" position-type="mirror" >
                    <!-- CLUDGE:: This apparently daft line enables 'clone' to work correctly on this BlockGenus -->
                    <DefaultArg genus-name="dummy" label="" />
                </BlockConnector>
                <BlockConnector connector-type="boolean" connector-kind="socket" position-type="bottom" />
                <BlockConnector connector-type="boolean" connector-kind="socket" position-type="bottom" />
            </BlockConnectors>
        </BlockGenus>

        <BlockGenus name="equal_poly" kind="function" color="127 255 0" initlabel="bg.equal_poly">
            <description>
                <text>is upper number greater then lower?</text>
            </description>
            <BlockConnectors>
                <BlockConnector connector-type="boolean" connector-kind="plug" position-type="mirror" >
                    <!-- CLUDGE:: This apparently daft line enables 'clone' to work correctly on this BlockGenus -->
                    <DefaultArg genus-name="dummy" label="" />
                </BlockConnector>
                <BlockConnector connector-type="poly" connector-kind="socket" position-type="bottom" />
                <BlockConnector connector-type="poly" connector-kind="socket" position-type="bottom" />
            </BlockConnectors>
        </BlockGenus>

        <BlockGenus name="not_equal_poly" kind="function" color="127 255 0" initlabel="bg.not_equal_poly">
            <description>
                <text>is upper number greater then lower?</text>
            </description>
            <BlockConnectors>
                <BlockConnector connector-type="boolean" connector-kind="plug" position-type="mirror" >
                    <!-- CLUDGE:: This apparently daft line enables 'clone' to work correctly on this BlockGenus -->
                    <DefaultArg genus-name="dummy" label="" />
                </BlockConnector>
                <BlockConnector connector-type="poly" connector-kind="socket" position-type="bottom" />
                <BlockConnector connector-type="poly" connector-kind="socket" position-type="bottom" />
            </BlockConnectors>
        </BlockGenus>

        <BlockGenus name="equal_string" kind="function" color="127 255 0" initlabel="bg.equal_string">
            <description>
                <text>is upper number greater then lower?</text>
            </description>
            <BlockConnectors>
                <BlockConnector connector-type="boolean" connector-kind="plug" position-type="mirror" >
                    <!-- CLUDGE:: This apparently daft line enables 'clone' to work correctly on this BlockGenus -->
                    <DefaultArg genus-name="dummy" label="" />
                </BlockConnector>
                <BlockConnector connector-type="string" connector-kind="socket" position-type="bottom" />
                <BlockConnector connector-type="string" connector-kind="socket" position-type="bottom" />
            </BlockConnectors>
        </BlockGenus>	

        <BlockGenus name="not_equal_string" kind="function" color="127 255 0" initlabel="bg.not_equal_string">
            <description>
                <text>is upper number greater then lower?</text>
            </description>
            <BlockConnectors>
                <BlockConnector connector-type="boolean" connector-kind="plug" position-type="mirror" >
                    <!-- CLUDGE:: This apparently daft line enables 'clone' to work correctly on this BlockGenus -->
                    <DefaultArg genus-name="dummy" label="" />
                </BlockConnector>
                <BlockConnector connector-type="string" connector-kind="socket" position-type="bottom" />
                <BlockConnector connector-type="string" connector-kind="socket" position-type="bottom" />
            </BlockConnectors>
        </BlockGenus>	

        <BlockGenus name="and" kind="data" initlabel="bg.and" color="127 255 0">
            <description>
                <text>
                    Reports true if both of the two conditions are true.
                </text>
            </description>
            <BlockConnectors>
                <BlockConnector connector-kind="plug" connector-type="boolean" />
                <BlockConnector label="" connector-kind="socket" connector-type="boolean" />
                <BlockConnector label="" connector-kind="socket" connector-type="boolean" />
            </BlockConnectors>
        </BlockGenus>

        <BlockGenus name="or" kind="function" initlabel="bg.or" color="127 255 0">
            <description>
                <text>
                    Reports true if one or both of the two conditions are true.
                </text>
            </description>
            <BlockConnectors>
                <BlockConnector connector-kind="plug" connector-type="boolean" />
                <BlockConnector label="" connector-kind="socket" connector-type="boolean" />
                <BlockConnector label="" connector-kind="socket" connector-type="boolean" />
            </BlockConnectors>
        </BlockGenus>

        <BlockGenus name="not" kind="function" initlabel="bg.not" color="127 255 0">
            <description>
                <text>
                    Reports the opposite of
                    <arg n="1" />
                    .
                </text>
            </description>
            <BlockConnectors>
                <BlockConnector connector-kind="plug" connector-type="boolean" />
                <BlockConnector label="" connector-kind="socket" connector-type="boolean" />
            </BlockConnectors>
        </BlockGenus>
        <!-- TODO:  Not sure why there's two of string_equal!
        <BlockGenus name="string_equal" kind="function" color="127 255 0" initlabel="bg.string_equal">
                <description>
                        <text>is upper string greater then lower?</text>
                </description>
                <BlockConnectors>
                        <BlockConnector connector-type="boolean" connector-kind="plug" position-type="mirror" >
                                CLUDGE:: This apparently daft line enables 'clone' to work correctly on this BlockGenus
                                <DefaultArg genus-name="dummy" label="" />
                        </BlockConnector>
                        <BlockConnector connector-type="string" connector-kind="socket" position-type="bottom" />
                        <BlockConnector connector-type="string" connector-kind="socket" position-type="bottom" />
                </BlockConnectors>
        </BlockGenus>
        -->
        <BlockGenus name="string_equal" kind="data" color="127 255 0" initlabel="bg.string_equal">
            <description>
                <text>is upper string greater then lower?</text>
            </description>
            <BlockConnectors>
                <BlockConnector connector-kind="plug" connector-type="boolean" />
                <BlockConnector connector-type="string" connector-kind="socket" >
                    <DefaultArg genus-name="message" label="message"/>
                </BlockConnector>
                <BlockConnector connector-type="string" connector-kind="socket" >
                    <DefaultArg genus-name="message" label="message"/>
                </BlockConnector>
            </BlockConnectors>
        </BlockGenus>

        <BlockGenus name="string_empty" kind="function" color="127 255 0" initlabel="bg.string_empty">
            <description>
                <text>is upper number greater then lower?</text>
            </description>
            <BlockConnectors>
                <BlockConnector connector-type="boolean" connector-kind="plug">
                    <!-- CLUDGE:: This apparently daft line enables 'clone' to work correctly on this BlockGenus -->
                </BlockConnector>
                <BlockConnector connector-type="string" connector-kind="socket" />
            </BlockConnectors>
        </BlockGenus>

        <BlockGenus name="string_toInt" kind="data" color="127 255 0" initlabel="bg.string_toInt">
            <description>
                <text>is a numeric string compared to the number it represents</text>
            </description>
            <BlockConnectors>
                <BlockConnector connector-kind="plug" connector-type="boolean" />
                <BlockConnector connector-type="string" connector-kind="socket" >
                    <DefaultArg genus-name="message" label="message"/>
                </BlockConnector>
                <BlockConnector connector-type="number" connector-kind="socket" >
                    <DefaultArg genus-name="number" label="1"/>
                </BlockConnector>
            </BlockConnectors>
        </BlockGenus>
		
        <!--****************** Mathematical Operators *************** -->

        <BlockGenus name="addition" kind="function" initlabel="bg.addition" color="149 193 31">
            <description>
                <text>
                    Reports the sum of two numbers (
                    <arg n="1" />
                    +
                    <arg n="2" />
                    ).
                </text>
            </description>
            <BlockConnectors>
                <BlockConnector label="" connector-kind="plug" connector-type="number" position-type="mirror" >
                    <!-- CLUDGE:: This apparently daft line enables 'clone' to work correctly on this BlockGenus -->
                    <DefaultArg genus-name="dummy" label="" />
                </BlockConnector>
                <BlockConnector label="" connector-kind="socket" connector-type="number" position-type="bottom" />
                <BlockConnector label="" connector-kind="socket" connector-type="number" position-type="bottom" />
            </BlockConnectors>
        </BlockGenus>

        <BlockGenus name="subtraction" kind="function" initlabel="bg.subtraction" color="149 193 31">
            <description>
                <text>
                    Reports the difference of two numbers (
                    <arg n="1" />
                    -
                    <arg n="2" />
                    ).
                </text>
            </description>
            <BlockConnectors>
                <BlockConnector label="" connector-kind="plug" connector-type="number" position-type="mirror" >
                    <!-- CLUDGE:: This apparently daft line enables 'clone' to work correctly on this BlockGenus -->
                    <DefaultArg genus-name="dummy" label="" />
                </BlockConnector>
                <BlockConnector label="" connector-kind="socket" connector-type="number" position-type="bottom" />
                <BlockConnector label="" connector-kind="socket" connector-type="number" position-type="bottom" />
            </BlockConnectors>
        </BlockGenus>

        <BlockGenus name="multiplication" kind="function" initlabel="bg.multiplication" color="149 193 31">
            <description>
                <text>
                    Reports the product of two numbers (
                    <arg n="1" />
                    x
                    <arg n="2" />
                    ).
                </text>
            </description>
            <BlockConnectors>
                <BlockConnector label="" connector-kind="plug" connector-type="number" position-type="mirror" >
                    <!-- CLUDGE:: This apparently daft line enables 'clone' to work correctly on this BlockGenus -->
                    <DefaultArg genus-name="dummy" label="" />
                </BlockConnector>
                <BlockConnector label="" connector-kind="socket" connector-type="number" position-type="bottom" />
                <BlockConnector label="" connector-kind="socket" connector-type="number" position-type="bottom" />
            </BlockConnectors>
        </BlockGenus>

        <BlockGenus name="division" kind="function" initlabel="bg.division" color="149 193 31">
            <description>
                <text>
                    Reports the quotient of two numbers (
                    <arg n="1" />
                    ÷
                    <arg n="2" />
                    ).
                </text>
            </description>
            <BlockConnectors>
                <BlockConnector label="" connector-kind="plug" connector-type="number" position-type="mirror" >
                    <!-- CLUDGE:: This apparently daft line enables 'clone' to work correctly on this BlockGenus -->
                    <DefaultArg genus-name="dummy" label="" />
                </BlockConnector>
                <BlockConnector label="" connector-kind="socket" connector-type="number" position-type="bottom" />
                <BlockConnector label="" connector-kind="socket" connector-type="number" position-type="bottom" />
            </BlockConnectors>
        </BlockGenus>

        <BlockGenus name="modulo" kind="function" color="149 193 31" initlabel="bg.modulo">
            <BlockConnectors>
                <BlockConnector label="" connector-kind="plug" connector-type="number" position-type="mirror" >
                    <!-- CLUDGE:: This apparently daft line enables 'clone' to work correctly on this BlockGenus -->
                    <DefaultArg genus-name="dummy" label="" />
                </BlockConnector>
                <BlockConnector label="" connector-kind="socket" connector-type="number" position-type="bottom" />
                <BlockConnector label="" connector-kind="socket" connector-type="number" position-type="bottom" />
            </BlockConnectors>
        </BlockGenus>

        <BlockGenus name="abs" kind="function" color="149 193 31" initlabel="bg.abs">
            <BlockConnectors>
                <BlockConnector connector-type="number" connector-kind="plug" />
                <BlockConnector connector-type="number" connector-kind="socket" />
            </BlockConnectors>
        </BlockGenus>

        <BlockGenus name="pow" kind="function" color="149 193 31" initlabel="bg.pow">
            <BlockConnectors>
                <BlockConnector connector-type="number" connector-kind="plug" />
                <BlockConnector connector-type="number" connector-kind="socket" label="bc.base" />
                <BlockConnector connector-type="number" connector-kind="socket" label="bc.exponent" />
            </BlockConnectors>
        </BlockGenus>

        <BlockGenus name="sqrt" kind="function" color="149 193 31" initlabel="bg.sqrt">
            <BlockConnectors>
                <BlockConnector connector-type="number" connector-kind="plug" />
                <BlockConnector connector-type="number" connector-kind="socket" />
            </BlockConnectors>
        </BlockGenus>

        <BlockGenus name="sin" kind="function" color="149 193 31" initlabel="bg.sin">
            <BlockConnectors>
                <BlockConnector connector-type="number" connector-kind="plug" />
                <BlockConnector connector-type="number" connector-kind="socket" />
            </BlockConnectors>
        </BlockGenus>

        <BlockGenus name="cos" kind="function" color="149 193 31" initlabel="bg.cos">
            <BlockConnectors>
                <BlockConnector connector-type="number" connector-kind="plug" />
                <BlockConnector connector-type="number" connector-kind="socket" />
            </BlockConnectors>
        </BlockGenus>

        <BlockGenus name="tan" kind="function" color="149 193 31" initlabel="bg.tan">
            <BlockConnectors>
                <BlockConnector connector-type="number" connector-kind="plug" />
                <BlockConnector connector-type="number" connector-kind="socket" />
            </BlockConnectors>
        </BlockGenus>

        <BlockGenus name="random_range" kind="function" color="149 193 31" initlabel="bg.pow">
            <description>
                <text>Generate random number between min and (max - 1)</text>
            </description>
            <BlockConnectors>
                <BlockConnector connector-type="number" connector-kind="plug" />
                <BlockConnector connector-type="number" connector-kind="socket" label="bc.min" >
                    <DefaultArg genus-name="number" label="0" />
                </BlockConnector>
                <BlockConnector connector-type="number" connector-kind="socket" label="bc.max" >
                    <DefaultArg genus-name="number" label="10" />
                </BlockConnector>
            </BlockConnectors>
        </BlockGenus>

        <BlockGenus name="map" kind="function" color="149 193 31" initlabel="bg.map">
            <description>
                <text>map</text>
            </description>
            <BlockConnectors>
                <BlockConnector connector-type="number" connector-kind="plug" />
                <BlockConnector connector-type="number" connector-kind="socket" label="bc.value" />
                <BlockConnector connector-type="number" connector-kind="socket" label="bc.from">
                    <DefaultArg genus-name="number" label="0" />
                </BlockConnector>
                <BlockConnector connector-type="number" connector-kind="socket">
                    <DefaultArg genus-name="number" label="1023" />
                </BlockConnector>
                <BlockConnector connector-type="number" connector-kind="socket" label="bc.to">
                    <DefaultArg genus-name="number" label="0" />
                </BlockConnector>
                <BlockConnector connector-type="number" connector-kind="socket">
                    <DefaultArg genus-name="number" label="255" />
                </BlockConnector>
            </BlockConnectors>
        </BlockGenus>

        <BlockGenus name="toint" kind="function" color="149 193 31" initlabel="bg.toint">
            <description>
                <text>to int</text>
            </description>
            <BlockConnectors>
                <BlockConnector connector-type="number" connector-kind="plug" />
                <BlockConnector connector-type="poly" connector-kind="socket" label="bc.value" />

            </BlockConnectors>
        </BlockGenus>

        <BlockGenus name="constrain" kind="function" color="149 193 31" initlabel="bg.constrain">
            <description>
                <text>Constrain a number between two values</text>
            </description>
            <BlockConnectors>
                <BlockConnector connector-type="number" connector-kind="plug" />
                <BlockConnector connector-type="number" connector-kind="socket" label="bc.value" />
                <BlockConnector connector-type="number" connector-kind="socket" label="bc.low">
                    <DefaultArg genus-name="number" label="0" />
                </BlockConnector>
                <BlockConnector connector-type="number" connector-kind="socket" label="bc.high">
                    <DefaultArg genus-name="number" label="255" />
                </BlockConnector>
            </BlockConnectors>
        </BlockGenus>

        <!--****************** Pins *************** -->

        <BlockGenus name="pin-read-digital" kind="data" color="77 191 169" initlabel="bg.pin-read-digital">
            <description>
                <text>Read digital from the pin</text>
            </description>
            <BlockConnectors>
                <BlockConnector connector-type="number" connector-kind="socket" label="#">
                </BlockConnector>
                <BlockConnector connector-type="boolean" connector-kind="plug" />
            </BlockConnectors>
        </BlockGenus>

        <BlockGenus name="pin-read-digital-pullup" kind="command" color="77 191 169" initlabel="bg.pin-write-digital">
            <description>
                <text>write digital to pin</text>
            </description>
            <BlockConnectors>
                <BlockConnector connector-type="number" connector-kind="socket" label="#">
                </BlockConnector>
            </BlockConnectors>
        </BlockGenus>

        <BlockGenus name="pin-read-analog" kind="data" color="77 191 169" initlabel="bg.pin-read-analog">
            <description>
                <text>Read analog value from pin</text>
            </description>
            <BlockConnectors>
                <BlockConnector connector-type="number" connector-kind="socket" label="#">
                </BlockConnector>
                <BlockConnector connector-type="number" connector-kind="plug" />
            </BlockConnectors>
        </BlockGenus>

        <BlockGenus name="pin-write-digital" kind="command" color="77 191 169" initlabel="bg.pin-write-digital">
            <description>
                <text>write digital to pin</text>
            </description>
            <BlockConnectors>
                <BlockConnector connector-type="number" connector-kind="socket" label="#">
                    <DefaultArg genus-name="number" label="13" />
                </BlockConnector>
                <BlockConnector connector-type="boolean" connector-kind="socket">
                    <DefaultArg genus-name="digital-high" label="HIGH" />
                </BlockConnector>
            </BlockConnectors>
        </BlockGenus>

        <BlockGenus name="pin-write-analog" kind="command" color="77 191 169" initlabel="bg.pin-write-analog">
            <description>
                <text>write analog to pin</text>
            </description>
            <BlockConnectors>
                <BlockConnector connector-type="number" connector-kind="socket" label="#">
                    <DefaultArg genus-name="number" label="0" />
                </BlockConnector>
                <BlockConnector connector-type="number" connector-kind="socket">
                    <DefaultArg genus-name="number" label="255" />
                </BlockConnector>
            </BlockConnectors>
        </BlockGenus>

        <BlockGenus name="pin-toggle" kind="command" color="77 191 169" initlabel="bg.pin-toggle">
            <description>
                <text>toggle digital pin</text>
            </description>
            <BlockConnectors>
                <BlockConnector connector-type="number" connector-kind="socket" label="#">
                </BlockConnector>
            </BlockConnectors>
        </BlockGenus>

        <BlockGenus name="tone" kind="command" color="77 191 169" initlabel="tone">
            <description>
                <text>Generates a square wave of the specified frequency (and 50%
                    duty cycle) on a pin.
                </text>
            </description>
            <BlockConnectors>
                <BlockConnector connector-type="number" connector-kind="socket" label="bc.pin_number">
                </BlockConnector>
                <BlockConnector connector-type="number" connector-kind="socket" label="bc.frequency">
                    <DefaultArg genus-name="number" label="440" />
                </BlockConnector>

            </BlockConnectors>
        </BlockGenus>

        <BlockGenus name="tone_time" kind="command" color="77 191 169" initlabel="tone">
            <description>
                <text>Generates a square wave of the specified frequency (and 50%
                    duty cycle) on a pin.
                </text>
            </description>
            <BlockConnectors>
                <BlockConnector connector-type="number" connector-kind="socket" label="bc.pin_number">
                </BlockConnector>
                <BlockConnector connector-type="number" connector-kind="socket" label="bc.frequency">
                    <DefaultArg genus-name="number" label="440" />
                </BlockConnector>
                <BlockConnector connector-type="number" connector-kind="socket" label="bc.milliseconds">
                    <DefaultArg genus-name="number" label="1000" />
                </BlockConnector>
            </BlockConnectors>
        </BlockGenus>

        <BlockGenus name="no_tone" kind="command" color="77 191 169" initlabel="noTone">
            <description>
                <text>Stops the generation of a square wave triggered by tone().
                </text>
            </description>
            <BlockConnectors>
                <BlockConnector connector-type="number" connector-kind="socket" label="bc.pin_number">
                </BlockConnector>
            </BlockConnectors>
        </BlockGenus>

        <BlockGenus name="DDRA" kind="command" color="77 191 169" initlabel="bg.DDRA">
            <description>
                <text>DDRA
                </text>
            </description>
            <BlockConnectors>
                <BlockConnector connector-type="number" connector-kind="socket" >
                    <DefaultArg genus-name="number" label="11111111" />
                </BlockConnector>
            </BlockConnectors>
        </BlockGenus>
        <BlockGenus name="DDRB" kind="command" color="77 191 169" initlabel="bg.DDRB">
            <description>
                <text>DDRB
                </text>
            </description>
            <BlockConnectors>
                <BlockConnector connector-type="number" connector-kind="socket" >
                    <DefaultArg genus-name="number" label="11111111" />
                </BlockConnector>
            </BlockConnectors>
        </BlockGenus>
        <BlockGenus name="DDRC" kind="command" color="77 191 169" initlabel="bg.DDRC">
            <description>
                <text>DDRC
                </text>
            </description>
            <BlockConnectors>
                <BlockConnector connector-type="number" connector-kind="socket">
                    <DefaultArg genus-name="number" label="11111111" />
                </BlockConnector>
            </BlockConnectors>
        </BlockGenus>
        <BlockGenus name="DDRD" kind="command" color="77 191 169" initlabel="bg.DDRD">
            <description>
                <text>DDRD
                </text>
            </description>
            <BlockConnectors>
                <BlockConnector connector-type="number" connector-kind="socket" >
                    <DefaultArg genus-name="number" label="11111111" />
                </BlockConnector>
            </BlockConnectors>
        </BlockGenus>
        <BlockGenus name="DDRH" kind="command" color="77 191 169" initlabel="bg.DDRH">
            <description>
                <text>DDRH
                </text>
            </description>
            <BlockConnectors>
                <BlockConnector connector-type="number" connector-kind="socket" >
                    <DefaultArg genus-name="number" label="11111111" />
                </BlockConnector>
            </BlockConnectors>
        </BlockGenus>
        <BlockGenus name="DDRL" kind="command" color="77 191 169" initlabel="bg.DDRL">
            <description>
                <text>DDRL
                </text>
            </description>
            <BlockConnectors>
                <BlockConnector connector-type="number" connector-kind="socket" >
                    <DefaultArg genus-name="number" label="11111111" />
                </BlockConnector>
            </BlockConnectors>
        </BlockGenus>
        <BlockGenus name="PORTA" kind="command" color="77 191 169" initlabel="bg.PORTA">
            <description>
                <text>PORTA
                </text>
            </description>
            <BlockConnectors>
                <BlockConnector connector-type="number" connector-kind="socket" >
                    <DefaultArg genus-name="number" label="11111111" />
                </BlockConnector>
            </BlockConnectors>
        </BlockGenus>
        <BlockGenus name="PORTB" kind="command" color="77 191 169" initlabel="bg.PORTB">
            <description>
                <text>PORTB
                </text>
            </description>
            <BlockConnectors>
                <BlockConnector connector-type="number" connector-kind="socket" >
                    <DefaultArg genus-name="number" label="11111111" />
                </BlockConnector>
            </BlockConnectors>
        </BlockGenus>
        <BlockGenus name="PORTC" kind="command" color="77 191 169" initlabel="bg.PORTC">
            <description>
                <text>PORTC
                </text>
            </description>
            <BlockConnectors>
                <BlockConnector connector-type="number" connector-kind="socket" >
                    <DefaultArg genus-name="number" label="11111111" />
                </BlockConnector>
            </BlockConnectors>
        </BlockGenus>
        <BlockGenus name="PORTD" kind="command" color="77 191 169" initlabel="bg.PORTD">
            <description>
                <text>PORTD
                </text>
            </description>
            <BlockConnectors>
                <BlockConnector connector-type="number" connector-kind="socket" >
                    <DefaultArg genus-name="number" label="11111111" />
                </BlockConnector>
            </BlockConnectors>
        </BlockGenus>
        <BlockGenus name="PORTH" kind="command" color="77 191 169" initlabel="bg.PORTH">
            <description>
                <text>PORTH
                </text>
            </description>
            <BlockConnectors>
                <BlockConnector connector-type="number" connector-kind="socket" >
                    <DefaultArg genus-name="number" label="11111111" />
                </BlockConnector>
            </BlockConnectors>
        </BlockGenus>
        <BlockGenus name="PORTL" kind="command" color="77 191 169" initlabel="bg.PORTL">
            <description>
                <text>PORTL
                </text>
            </description>
            <BlockConnectors>
                <BlockConnector connector-type="number" connector-kind="socket" >
                    <DefaultArg genus-name="number" label="11111111" />
                </BlockConnector>
            </BlockConnectors>
        </BlockGenus>
        <BlockGenus name="PORT_FIX" kind="command" color="77 191 169" initlabel="bg.PORT_FIX">
            <description>
                <text>PORTL
                </text>
            </description>
            <BlockConnectors>
                <BlockConnector connector-type="number" connector-kind="socket" label="bc.pin_number" >
                    <DefaultArg genus-name="PORTA2" label="PORTA" />
                </BlockConnector>
                <BlockConnector connector-type="boolean" connector-kind="socket" label="0">
                    <DefaultArg genus-name="LEVEL1" label="ON" />
                </BlockConnector>
                <BlockConnector connector-type="boolean" connector-kind="socket" label="1">
                    <DefaultArg genus-name="LEVEL1" label="ON" />
                </BlockConnector>
                <BlockConnector connector-type="boolean" connector-kind="socket" label="2">
                    <DefaultArg genus-name="LEVEL1" label="ON" />
                </BlockConnector>
                <BlockConnector connector-type="boolean" connector-kind="socket" label="3">
                    <DefaultArg genus-name="LEVEL1" label="ON" />
                </BlockConnector>
                <BlockConnector connector-type="boolean" connector-kind="socket" label="4">
                    <DefaultArg genus-name="LEVEL1" label="ON" />
                </BlockConnector>
                <BlockConnector connector-type="boolean" connector-kind="socket" label="5">
                    <DefaultArg genus-name="LEVEL1" label="ON" />
                </BlockConnector>
                <BlockConnector connector-type="boolean" connector-kind="socket" label="6">
                    <DefaultArg genus-name="LEVEL1" label="ON" />
                </BlockConnector>
                <BlockConnector connector-type="boolean" connector-kind="socket" label="7">
                    <DefaultArg genus-name="LEVEL1" label="ON" />
                </BlockConnector>
            </BlockConnectors>
        </BlockGenus>
        <BlockGenus name="PORTA2" kind="data" color="77 191 169" initlabel="bg.PORTA2" editable-label="no">
            <BlockConnectors>
                <BlockConnector connector-type="number" connector-kind="plug"/>
            </BlockConnectors>		
        </BlockGenus>
        <BlockGenus name="PORTB2" kind="data" color="77 191 169" initlabel="bg.PORTB2" editable-label="no">
            <BlockConnectors>
                <BlockConnector connector-type="number" connector-kind="plug"/>
            </BlockConnectors>		
        </BlockGenus>
        <BlockGenus name="PORTC2" kind="data" color="77 191 169" initlabel="bg.PORTC2" editable-label="no">
            <BlockConnectors>
                <BlockConnector connector-type="number" connector-kind="plug"/>
            </BlockConnectors>		
        </BlockGenus>
        <BlockGenus name="PORTD2" kind="data" color="77 191 169" initlabel="bg.PORTD2" editable-label="no">
            <BlockConnectors>
                <BlockConnector connector-type="number" connector-kind="plug"/>
            </BlockConnectors>		
        </BlockGenus>
        <BlockGenus name="PORTH2" kind="data" color="77 191 169" initlabel="bg.PORTH2" editable-label="no">
            <BlockConnectors>
                <BlockConnector connector-type="number" connector-kind="plug"/>
            </BlockConnectors>		
        </BlockGenus>
        <BlockGenus name="PORTL2" kind="data" color="77 191 169" initlabel="bg.PORTL2" editable-label="no">
            <BlockConnectors>
                <BlockConnector connector-type="number" connector-kind="plug"/>
            </BlockConnectors>		
        </BlockGenus>
        <BlockGenus name="PINA" kind="data" color="77 191 169" initlabel="bg.PINA">
            <description>
                <text>PINA</text>
            </description>
            <BlockConnectors>
                <BlockConnector connector-type="number" connector-kind="plug" position-type="mirror"/>
            </BlockConnectors>
        </BlockGenus>
        <BlockGenus name="PINB" kind="data" color="77 191 169" initlabel="bg.PINB">
            <description>
                <text>PINB</text>
            </description>
            <BlockConnectors>
                <BlockConnector connector-type="number" connector-kind="plug" position-type="mirror"/>
            </BlockConnectors>
        </BlockGenus>
        <BlockGenus name="PINC" kind="data" color="77 191 169" initlabel="bg.PINC">
            <description>
                <text>PINC</text>
            </description>
            <BlockConnectors>
                <BlockConnector connector-type="number" connector-kind="plug" position-type="mirror" />
            </BlockConnectors>
        </BlockGenus>
        <BlockGenus name="PIND" kind="data" color="77 191 169" initlabel="bg.PIND">
            <description>
                <text>PIND</text>
            </description>
            <BlockConnectors>
                <BlockConnector connector-type="number" connector-kind="plug" position-type="mirror"/>
            </BlockConnectors>
        </BlockGenus>
        <BlockGenus name="PINH" kind="data" color="77 191 169" initlabel="bg.PINH">
            <description>
                <text>PINH</text>
            </description>
            <BlockConnectors>
                <BlockConnector connector-type="number" connector-kind="plug" position-type="mirror"/>
            </BlockConnectors>
        </BlockGenus>
        <BlockGenus name="PINL" kind="data" color="77 191 169" initlabel="bg.PINL">
            <description>
                <text>PINL</text>
            </description>
            <BlockConnectors>
                <BlockConnector connector-type="number" connector-kind="plug" position-type="mirror"/>
            </BlockConnectors>
        </BlockGenus>
        
        <!--****************** PINOS ENTRADA CLP(Esp) ***************-->
        
        <BlockGenus name="E01" kind="data" color="77 191 169" initlabel="bg.E01">
            <description>
                <text>E01</text>
            </description>
            <BlockConnectors>
                <BlockConnector connector-type="number" connector-kind="plug" position-type="mirror"/>
            </BlockConnectors>
        </BlockGenus>
        
        <BlockGenus name="E02" kind="data" color="77 191 169" initlabel="bg.E02">
            <description>
                <text>E02</text>
            </description>
            <BlockConnectors>
                <BlockConnector connector-type="number" connector-kind="plug" position-type="mirror"/>
            </BlockConnectors>
        </BlockGenus>
        
        <BlockGenus name="E03" kind="data" color="77 191 169" initlabel="bg.E03">
            <description>
                <text>E03</text>
            </description>
            <BlockConnectors>
                <BlockConnector connector-type="number" connector-kind="plug" position-type="mirror"/>
            </BlockConnectors>
        </BlockGenus>
        
        <BlockGenus name="E04" kind="data" color="77 191 169" initlabel="bg.E04">
            <description>
                <text>E04</text>
            </description>
            <BlockConnectors>
                <BlockConnector connector-type="number" connector-kind="plug" position-type="mirror"/>
            </BlockConnectors>
        </BlockGenus>
        
        <BlockGenus name="E05" kind="data" color="77 191 169" initlabel="bg.E05">
            <description>
                <text>E05</text>
            </description>
            <BlockConnectors>
                <BlockConnector connector-type="number" connector-kind="plug" position-type="mirror"/>
            </BlockConnectors>
        </BlockGenus>
        
        <BlockGenus name="E06" kind="data" color="77 191 169" initlabel="bg.E06">
            <description>
                <text>E06</text>
            </description>
            <BlockConnectors>
                <BlockConnector connector-type="number" connector-kind="plug" position-type="mirror"/>
            </BlockConnectors>
        </BlockGenus>

        <!--****************** Variables *************** -->

        <BlockGenus name="number" kind="data" color="232 156 149" initlabel="bg.number" editable-label="yes">
            <description>
                <text>
                    Standard integer constant
                </text>
            </description>
            <BlockConnectors>
                <BlockConnector connector-type="number" connector-kind="plug" position-type="mirror" />
            </BlockConnectors>
        </BlockGenus>

        <BlockGenus name="setter_variable_number" kind="command" color="232 156 149" initlabel="bg.setter_variable_number">
            <description>
                <text>set integer variable</text>
            </description>
            <BlockConnectors>
                <BlockConnector connector-type="number" connector-kind="socket" label="bc.variable">
                    <DefaultArg genus-name="variable_number" label="Integer" />
                </BlockConnector>
                <BlockConnector connector-type="number" connector-kind="socket" label="bc.value">
                    <DefaultArg genus-name="number" label="0" />
                </BlockConnector>
            </BlockConnectors>
        </BlockGenus>

        <BlockGenus name="variable_number" kind="data" initlabel="bg.variable_number" editable-label="yes" is-label-value="yes" color="230 110 110">
            <description>
                <text>
                    Digital Var
                </text>
            </description>
            <BlockConnectors>
                <BlockConnector connector-type="number" connector-kind="plug" position-type="mirror" />
            </BlockConnectors>
        </BlockGenus>

        <BlockGenus name="setter_variable_number_unsigned_long" kind="command" color="255 153 204" initlabel="bg.setter_variable_number_unsigned_long">
            <description>
                <text>set a large integer variable</text>
            </description>
            <BlockConnectors>
                <BlockConnector connector-type="number" connector-kind="socket" label="bc.variable">
                    <DefaultArg genus-name="variable_number_unsigned_long" label="Unsigned_long" />
                </BlockConnector>
                <BlockConnector connector-type="number" connector-kind="socket" label="bc.value">
                    <DefaultArg genus-name="number_long" label="1000000" />
                </BlockConnector>
            </BlockConnectors>
        </BlockGenus>

        <BlockGenus name="variable_number_unsigned_long" kind="data" initlabel="bg.variable_number_unsigned_long" editable-label="yes" is-label-value="yes" color="204 102 153">
            <description>
                <text>
                    Unsigned Long Var
                </text>
            </description>
            <BlockConnectors>
                <BlockConnector connector-type="number" connector-kind="plug" position-type="mirror" />
            </BlockConnectors>
        </BlockGenus>

        <BlockGenus name="setter_variable_digital" kind="command" color="204 153 255" initlabel="bg.setter_variable_digital">
            <description>
                <text>write digital to pin</text>
            </description>
            <BlockConnectors>
                <BlockConnector connector-type="boolean" connector-kind="socket" label="bc.variable">
                    <DefaultArg genus-name="variable_digital" label="Bool" />
                </BlockConnector>
                <BlockConnector connector-type="boolean" connector-kind="socket" label="bc.value">
                    <DefaultArg genus-name="digital-high" label="HIGH" />
                </BlockConnector>
            </BlockConnectors>
        </BlockGenus>

        <BlockGenus name="variable_digital" kind="data" initlabel="bg.variable_digital" editable-label="yes" is-label-value="yes" color="153 102 204">
            <description>
                <text>
                    Digital Var
                </text>
            </description>
            <BlockConnectors>
                <BlockConnector connector-type="boolean" connector-kind="plug" position-type="mirror" />
            </BlockConnectors>
        </BlockGenus>

        <BlockGenus name="digital-low" kind="data" color="204 153 255" initlabel="bg.digital-low">
            <description>
                <text>
                    Pin LOW
                </text>
            </description>
            <BlockConnectors>
                <BlockConnector connector-type="boolean" connector-kind="plug" position-type="mirror" />
            </BlockConnectors>
        </BlockGenus>

        <BlockGenus name="digital-high" kind="data" color="204 153 255" initlabel="bg.digital-high">
            <description>
                <text>
                    Pin HIGH
                </text>
            </description>
            <BlockConnectors>
                <BlockConnector connector-type="boolean" connector-kind="plug" position-type="mirror" />
            </BlockConnectors>
        </BlockGenus>

        <BlockGenus name="setter_variable_number_double" kind="command" color="153 204 255" initlabel="bg.setter_variable_number_double">
            <description>
                <text>set decimal variable</text>
            </description>
            <BlockConnectors>
                <BlockConnector connector-type="number" connector-kind="socket" label="bc.variable">
                    <DefaultArg genus-name="variable_number_double" label="Double" />
                </BlockConnector>
                <BlockConnector connector-type="number" connector-kind="socket" label="bc.value">
                    <DefaultArg genus-name="number_double" label="3.1415927" />
                </BlockConnector>
            </BlockConnectors>
        </BlockGenus>

        <BlockGenus name="variable_number_double" kind="data" initlabel="bg.variable_number_double" editable-label="yes" is-label-value="yes" color="51 153 255">
            <description>
                <text>
                    Double
                </text>
            </description>
            <BlockConnectors>
                <BlockConnector connector-type="number" connector-kind="plug" position-type="mirror" />
            </BlockConnectors>
        </BlockGenus>

        <BlockGenus name="number_double" kind="data" color="153 204 255" initlabel="bg.number_double" editable-label="yes">
            <description>
                <text>
                    'Double' constant
                </text>
            </description>
            <BlockConnectors>
                <BlockConnector connector-type="number" connector-kind="plug" position-type="mirror" />
            </BlockConnectors>
        </BlockGenus>

        <BlockGenus name="setter_variable_char" kind="command" color="102 255 51" initlabel="bg.setter_variable_char">
            <description>
                <text>create a vector of numbers</text>
            </description>
            <BlockConnectors>
                <BlockConnector connector-type="poly" connector-kind="socket" label="bc.variable">
                    <DefaultArg genus-name="variable_poly" label="Char" />
                </BlockConnector>
                <BlockConnector connector-type="poly" connector-kind="socket" label="char">
                    <DefaultArg genus-name="char" label="A" />
                </BlockConnector>

            </BlockConnectors>
        </BlockGenus>

        <BlockGenus name="variable_poly" kind="data" initlabel="bg.variable_poly" editable-label="yes" is-label-value="yes" color="0 204  0">
            <description>
                <text>
                    character variable
                </text>
            </description>
            <BlockConnectors>
                <BlockConnector connector-type="poly" connector-kind="plug" position-type="mirror" />
            </BlockConnectors>
        </BlockGenus>

        <BlockGenus name="char" kind="data" color="102 255 51" initlabel="bg.char" editable-label="yes">
            <description>
                <text>
                    character
                </text>
            </description>
            <BlockConnectors>
                <BlockConnector connector-type="poly" connector-kind="plug" position-type="mirror" />
            </BlockConnectors>
        </BlockGenus>

        <BlockGenus name="setter_variable_String" kind="command" color="245 245 245" initlabel="bg.setter_variable_String">
            <description>
                <text>set String variable</text>
            </description>
            <BlockConnectors>
                <BlockConnector connector-type="string" connector-kind="socket" label="bc.variable">
                    <DefaultArg genus-name="variable_String" label="STRING" />
                </BlockConnector>
                <BlockConnector connector-type="string" connector-kind="socket" label="bc.value">
                    <DefaultArg genus-name="message" label="message" />
                </BlockConnector>
            </BlockConnectors>
        </BlockGenus>

        <BlockGenus name="variable_String" kind="data" initlabel="bg.variable_String" editable-label="yes" is-label-value="yes" color="245 245 245">
            <description>
                <text>
                    Variable String
                </text>
            </description>
            <BlockConnectors>
                <BlockConnector connector-type="string" connector-kind="plug" position-type="mirror" />
            </BlockConnectors>
        </BlockGenus>

        <BlockGenus name="message" kind="data" color="245 245 245" initlabel="bg.message" editable-label="yes">
            <description>
                <text>string message</text>
            </description>
            <BlockConnectors>
                <BlockConnector connector-type="string" connector-kind="plug" />
                <BlockConnector connector-type="string" connector-kind="socket" />
            </BlockConnectors>
        </BlockGenus>

        <BlockGenus name="create_variable_vector" kind="command" color="232 156 149" initlabel="bg.create_variable_vector">
            <description>
                <text>create a vector of numbers</text>
            </description>
            <BlockConnectors>
                <BlockConnector connector-type="number" connector-kind="socket" label="bc.array">
                    <DefaultArg genus-name="variable_fake" label="Table" />
                </BlockConnector>
                <BlockConnector connector-type="number" connector-kind="socket" label="bc.vecsize">
                    <DefaultArg genus-name="number" label="1" />
                </BlockConnector>

            </BlockConnectors>
        </BlockGenus>

        <BlockGenus name="variable_vector" kind="data" initlabel="bg.variable_vector" editable-label="yes" is-label-value="yes" color="232 156 149">
            <description>
                <text>
                    Array member value
                </text>
            </description>
            <BlockConnectors>
                <BlockConnector connector-type="number" connector-kind="plug" />
                <BlockConnector connector-type="number" connector-kind="socket" label="bc.num">
                    <DefaultArg genus-name="number" label="1" />
                </BlockConnector>
            </BlockConnectors>
        </BlockGenus>

        <BlockGenus name="setter_variable_vector" kind="command" color="232 156 149" initlabel="bg.setter_variable_vector">
            <description>
                <text>Set a vector number</text>
            </description>
            <BlockConnectors>
                <BlockConnector connector-type="number" connector-kind="socket" label="bc.array">
                    <DefaultArg genus-name="variable_fake" label="Table" />
                </BlockConnector>
                <BlockConnector connector-type="number" connector-kind="socket" label="bc.position">
                    <DefaultArg genus-name="number" label="0" />
                </BlockConnector>
                <BlockConnector connector-type="number" connector-kind="socket" label="bc.value">
                    <DefaultArg genus-name="number" label="1" />
                </BlockConnector>
            </BlockConnectors>
        </BlockGenus>

        <!--****************** Time *************** -->

        <BlockGenus name="delay" kind="command" color="0 255 255" initlabel="bg.delay">
            <description>
                <text>program delay in x milliseconds</text>
            </description>
            <BlockConnectors>
                <BlockConnector connector-type="number" connector-kind="socket" label="bc.milliseconds">
                    <DefaultArg genus-name="number" label="1000" />
                </BlockConnector>
            </BlockConnectors>
        </BlockGenus>
		
        <BlockGenus name="delay_microseconds" kind="command" color="0 255 255" initlabel="bg.delay_microseconds">
            <description>
                <text>program delay in x milliseconds</text>
            </description>
            <BlockConnectors>
                <BlockConnector connector-type="number" connector-kind="socket" label="bc.microseconds">
                    <DefaultArg genus-name="number" label="1000" />
                </BlockConnector>
            </BlockConnectors>
        </BlockGenus>

        <BlockGenus name="millis" kind="data" color="255 153 204" initlabel="bg.millis">
            <description>
                <text>Time in milliseconds</text>
            </description>
            <BlockConnectors>
                <BlockConnector connector-type="number" connector-kind="plug" position-type="mirror" />
            </BlockConnectors>
        </BlockGenus>

        <!--****************** Servo *************** -->

        <BlockGenus name="servo_default" kind="command" color="0 127 255" initlabel="bg.servo">
            <description>
                <text>Servo Default</text>
            </description>
            <BlockConnectors>
                <BlockConnector connector-type="number" connector-kind="socket" label="bc.pin_number">
                </BlockConnector>
                <BlockConnector connector-type="number" connector-kind="socket" label="bc.angle">
                    <DefaultArg genus-name="number" label="90" />
                </BlockConnector>
            </BlockConnectors>
        </BlockGenus>

        <BlockGenus name="servo_sg90" kind="command" color="0 127 255"  initlabel="bg.servo">
            <description>
                <text>Servo SG90</text>
            </description>
            <BlockConnectors>
                <BlockConnector connector-type="number-list" connector-kind="socket" label="bc.pin_number">
                </BlockConnector>
                <BlockConnector connector-type="number" connector-kind="socket" label="bc.angle">
                    <DefaultArg genus-name="number" label="90" />
                </BlockConnector>
            </BlockConnectors>
        </BlockGenus>

        <BlockGenus name="servo_mg996r" kind="command" color="0 127 255"  initlabel="bg.servo">
            <description>
                <text>Servo MG996R</text>
            </description>
            <BlockConnectors>
                <BlockConnector connector-type="number" connector-kind="socket" label="bc.pin_number">
                </BlockConnector>
                <BlockConnector connector-type="number" connector-kind="socket" label="bc.angle">
                    <DefaultArg genus-name="number" label="90" />
                </BlockConnector>
            </BlockConnectors>
        </BlockGenus>

        <!--****************** Serial Port (UART) *************** -->

        <BlockGenus name="serial_available" kind="data" color="0 0 255" initlabel="bg.serial_available">
            <BlockConnectors>
                <BlockConnector connector-type="boolean" connector-kind="plug" position-type="mirror" />
            </BlockConnectors>
        </BlockGenus>

        <BlockGenus name="serial_available2" kind="data" color="0 0 255" initlabel="bg.serial_available2">
            <BlockConnectors>
                <BlockConnector connector-type="number" connector-kind="plug" position-type="mirror" />
            </BlockConnectors>
        </BlockGenus>

        <BlockGenus name="serial_read" kind="data" color="0 0 255" initlabel="bg.serial_read">
            <BlockConnectors>
                <BlockConnector connector-type="number" connector-kind="plug" position-type="mirror" />
            </BlockConnectors>
        </BlockGenus>

        <BlockGenus name="serial_parseInt" kind="data" color="0 0 255" initlabel="bg.serial_parseInt">
            <BlockConnectors>
                <BlockConnector connector-type="number" connector-kind="plug" position-type="mirror" />
            </BlockConnectors>
        </BlockGenus>

        <BlockGenus name="serial_write" kind="command" color="0 0 255" initlabel="serial_write">
            <description>
                <text>bg.serial_write.description</text>
            </description>
            <BlockConnectors>
                <BlockConnector connector-type="string" connector-kind="socket" >
                    <DefaultArg genus-name="message" label="message" />
                </BlockConnector>
            </BlockConnectors>
        </BlockGenus>

        <BlockGenus name="serial_print" kind="command" color="0 0 255" initlabel="bg.serial_print">
            <description>
                <text>bg.serial_print.description</text>
            </description>
            <BlockConnectors>
                <BlockConnector connector-type="string" connector-kind="socket">
                    <DefaultArg genus-name="message" label="message" />
                </BlockConnector>
            </BlockConnectors>
        </BlockGenus>
		
        <BlockGenus name="serial_println" kind="command" color="0 0 255" initlabel="bg.serial_println">
            <description>
                <text>bg.serial_println.description</text>
            </description>
            <BlockConnectors>
                <BlockConnector connector-type="string" connector-kind="socket">
                    <DefaultArg genus-name="message" label="message" />
                </BlockConnector>
            </BlockConnectors>
        </BlockGenus>

        <BlockGenus name="glue_sn" kind="data" color="0 0 255" initlabel="bg.glue_sn">
            <description>
                <text>glue number to string</text>
            </description>
            <BlockConnectors>
                <BlockConnector connector-type="string" connector-kind="plug" />
                <BlockConnector connector-type="number" connector-kind="socket" />
            </BlockConnectors>
        </BlockGenus>

        <BlockGenus name="glue_sb" kind="data" color="0 0 255" initlabel="bg.glue_sb">
            <description>
                <text>glue boolean to string</text>
            </description>
            <BlockConnectors>
                <BlockConnector connector-type="string" connector-kind="plug" />
                <BlockConnector connector-type="boolean" connector-kind="socket" />
            </BlockConnectors>
        </BlockGenus>

        <BlockGenus name="glue_poly" kind="data" color="0 0 255" initlabel="bg.glue_poly" editable-label="no">
            <description>
                <text></text>
            </description>
            <BlockConnectors>
                <BlockConnector connector-type="string" connector-kind="plug" />
                <BlockConnector connector-type="poly" connector-kind="socket" />
            </BlockConnectors>
        </BlockGenus>

        <BlockGenus name="Serialplus_send_variable_number" kind="command" color="0 0 255" initlabel="bg.Serialplus_send_variable_number">
            <description>
                <text>Send integer variable</text>
            </description>
            <BlockConnectors>
                <BlockConnector connector-type="number" connector-kind="socket" label="bc.value">
                    <DefaultArg genus-name="number" label="0" />
                </BlockConnector>
                <BlockConnector connector-type="number" connector-kind="socket" label="bc.channel">
                    <DefaultArg genus-name="number" label="0" />
                </BlockConnector>
                <BlockConnector connector-type="string" connector-kind="socket">
                    <DefaultArg genus-name="message" label="Serial" />
                </BlockConnector>
                <BlockConnector connector-type="number" connector-kind="socket" label="bc.interval">
                    <DefaultArg genus-name="number" label="100" />
                </BlockConnector>
            </BlockConnectors>
        </BlockGenus>

        <BlockGenus name="Serialplus_send_variable_digital" kind="command" color="0 0 255" initlabel="bg.Serialplus_send_variable_digital">
            <description>
                <text>Send digital </text>
            </description>
            <BlockConnectors>
                <BlockConnector connector-type="boolean" connector-kind="socket" label="bc.value">
                    <DefaultArg genus-name="digital-high" label="HIGH" />
                </BlockConnector>
                <BlockConnector connector-type="number" connector-kind="socket" label="bc.channel">
                    <DefaultArg genus-name="number" label="0" />
                </BlockConnector>
                <BlockConnector connector-type="string" connector-kind="socket">
                    <DefaultArg genus-name="message" label="Serial" />
                </BlockConnector>
                <BlockConnector connector-type="number" connector-kind="socket" label="bc.interval">
                    <DefaultArg genus-name="number" label="100" />
                </BlockConnector>
            </BlockConnectors>
        </BlockGenus>

        <BlockGenus name="Serialplus_receive_number" kind="data" color="0 0 255" initlabel="bg.Serialplus_receive_number">
            <BlockConnectors>
                <BlockConnector connector-type="number" connector-kind="plug"/>
                <BlockConnector connector-type="number" connector-kind="socket" label="bc.channel">
                    <DefaultArg genus-name="number" label="0" />
                </BlockConnector>
                <BlockConnector connector-type="string" connector-kind="socket">
                    <DefaultArg genus-name="message" label="Serial" />
                </BlockConnector>
            </BlockConnectors>
        </BlockGenus>

        <BlockGenus name="Serialplus_receive_digital" kind="data" color="0 0 255" initlabel="bg.Serialplus_receive_digital">
            <BlockConnectors>
                <BlockConnector connector-type="boolean" connector-kind="plug"/>
                <BlockConnector connector-type="number" connector-kind="socket" label="bc.channel">
                    <DefaultArg genus-name="number" label="0" />
                </BlockConnector>
                <BlockConnector connector-type="string" connector-kind="socket">
                    <DefaultArg genus-name="message" label="Serial" />
                </BlockConnector>
            </BlockConnectors>
        </BlockGenus>

        <!-- ******************** Wire *************** -->

        <BlockGenus name="wire_write" kind="command" color="127 0 255" initlabel="bg.wire_write">
            <description>
                <text>write data via I2C</text>
            </description>
            <BlockConnectors>
                <BlockConnector connector-type="number" connector-kind="socket" label="bc.device_address">
                    <DefaultArg genus-name="number" label="0" />
                </BlockConnector>
                <BlockConnector connector-type="number" connector-kind="socket" label="bc.register_address">
                    <DefaultArg genus-name="number" label="0" />
                </BlockConnector>
                <BlockConnector connector-type="number" connector-kind="socket" label="bc.value">
                    <DefaultArg genus-name="number" label="0" />
                </BlockConnector>
            </BlockConnectors>
        </BlockGenus>

        <BlockGenus name="wire_read" kind="data" color="127 0 255" initlabel="bg.wire_read">
            <description>
                <text>read data from i2c</text>
            </description>
            <BlockConnectors>
                <BlockConnector connector-type="number" connector-kind="plug" />
                <BlockConnector connector-type="number" connector-kind="socket" label="bc.device_address">
                    <DefaultArg genus-name="number" label="0" />
                </BlockConnector>
                <BlockConnector connector-type="number" connector-kind="socket" label="bc.register_address">
                    <DefaultArg genus-name="number" label="0" />
                </BlockConnector>
            </BlockConnectors>
        </BlockGenus>

        <BlockGenus name="wire_isread" kind="data" color="127 0 255" initlabel="bg.wire_isread">
            <description>
                <text>is last read from I2C success?</text>
            </description>
            <BlockConnectors>
                <BlockConnector connector-type="boolean" connector-kind="plug" position-type="mirror" />
            </BlockConnectors>
        </BlockGenus>

        <!-- ******************** EEPROM *************** -->

        <BlockGenus name="eeprom_read_int" kind="data" color="255 0 255" initlabel="bg.eeprom_read_int">
            <description>
                <text>EEPROM Read integer </text>
            </description>
            <BlockConnectors>
                <BlockConnector connector-type="number" connector-kind="plug" />
                <BlockConnector connector-type="number" connector-kind="socket" label="bc.eeprom_address">
                    <DefaultArg genus-name="number" label="0" />
                </BlockConnector>
            </BlockConnectors>
        </BlockGenus>

        <BlockGenus name="eeprom_write_int" kind="command" color="255 0 255" initlabel="bg.eeprom_write_int">
            <description>
                <text>EEPROM Write integer</text>
            </description>
            <BlockConnectors>
                <BlockConnector connector-type="number" connector-kind="socket" label="bc.eeprom_address">
                    <DefaultArg genus-name="number" label="0" />
                </BlockConnector>
                <BlockConnector connector-type="number" connector-kind="socket" label="bc.eeprom_data">
                    <DefaultArg genus-name="number" label="0" />
                </BlockConnector>
            </BlockConnectors>
        </BlockGenus>

        <BlockGenus name="eeprom_read_long" kind="data" color="255 0 255" initlabel="bg.eeprom_read_long">
            <description>
                <text>EEPROM Read 'unsigned long'</text>
            </description>
            <BlockConnectors>
                <BlockConnector connector-type="number" connector-kind="plug" />
                <BlockConnector connector-type="number" connector-kind="socket" label="bc.eeprom_address">
                    <DefaultArg genus-name="number" label="0" />
                </BlockConnector>
            </BlockConnectors>
        </BlockGenus>

        <BlockGenus name="eeprom_write_long" kind="command" color="255 0 255" initlabel="bg.eeprom_write_long">
            <description>
                <text>EEPROM Write 'unsigned long'</text>
            </description>
            <BlockConnectors>
                <BlockConnector connector-type="number" connector-kind="socket" label="bc.eeprom_address">
                    <DefaultArg genus-name="number" label="0" />
                </BlockConnector>
                <BlockConnector connector-type="number" connector-kind="socket" label="bc.eeprom_data">
                    <DefaultArg genus-name="number" label="0" />
                </BlockConnector>
            </BlockConnectors>
        </BlockGenus>

        <BlockGenus name="eeprom_read" kind="data" color="255 0 255" initlabel="bg.eeprom_read">
            <description>
                <text>EEPROM Read</text>
            </description>
            <BlockConnectors>
                <BlockConnector connector-type="number" connector-kind="plug" />
                <BlockConnector connector-type="number" connector-kind="socket" label="bc.eeprom_address">
                    <DefaultArg genus-name="number" label="0" />
                </BlockConnector>
            </BlockConnectors>
        </BlockGenus>

        <BlockGenus name="eeprom_write" kind="command" color="255 0 255" initlabel="bg.eeprom_write">
            <description>
                <text>EEPROM Write</text>
            </description>
            <BlockConnectors>
                <BlockConnector connector-type="number" connector-kind="socket" label="bc.eeprom_address">
                    <DefaultArg genus-name="number" label="0" />
                </BlockConnector>
                <BlockConnector connector-type="number" connector-kind="socket" label="bc.eeprom_data">
                    <DefaultArg genus-name="number" label="0" />
                </BlockConnector>
            </BlockConnectors>
        </BlockGenus>

        <!-- ******************** SD Card *************** -->

        <BlockGenus name="sd_write2" kind="command" color="255 0 127" initlabel="bg.sd_write2">
            <description>
                <text>Write to SD card</text>
            </description>
            <BlockConnectors>
                <BlockConnector connector-type="string" connector-kind="socket" label="File">
                    <DefaultArg genus-name="glue_msg" label="file.txt" />
                </BlockConnector>
                <BlockConnector connector-type="string" connector-kind="socket" label="Data">
                    <DefaultArg genus-name="message" label="Message" />
                </BlockConnector>
                <BlockConnector connector-type="boolean" connector-kind="socket" label="bc.ln">
                    <DefaultArg genus-name="true" label="True" />
                </BlockConnector>
                <BlockConnector connector-type="number" connector-kind="socket" label="CS">
                    <DefaultArg genus-name="number" label="10" />
                </BlockConnector>
            </BlockConnectors>
        </BlockGenus>

        <BlockGenus name="MaSD_Connect" kind="command" color="255 0 127" initlabel="bg.MaSD_Connect">
            <BlockConnectors>
                <BlockConnector connector-type="number" connector-kind="socket" label="CS">
                </BlockConnector>
            </BlockConnectors>
        </BlockGenus>

        <BlockGenus name="MaSD_file" kind="command" color="255 0 127" initlabel="bg.MaSD_file">
            <BlockConnectors>
                <BlockConnector connector-type="string" connector-kind="socket" label="bc.File">
                    <DefaultArg genus-name="glue_msg" label="file.txt" />
                </BlockConnector>
            </BlockConnectors>
        </BlockGenus>

        <BlockGenus name="MaSD_Write" kind="command" color="255 0 127" initlabel="bg.MaSD_Write">
            <BlockConnectors>
                <BlockConnector connector-type="string" connector-kind="socket" label="Data">
                    <DefaultArg genus-name="message" label="Message" />
                </BlockConnector>
            </BlockConnectors>
        </BlockGenus>

        <BlockGenus name="MaSD_NewLine" kind="command" color="255 0 127" initlabel="bg.MaSD_NewLine">
            <BlockConnectors>
            </BlockConnectors>
        </BlockGenus>

        <BlockGenus name="MaSD_separator" kind="command" color="255 0 127" initlabel="bg.MaSD_separator">
            <BlockConnectors>
                <BlockConnector connector-type="number" connector-kind="socket" label="bc.space">
                    <DefaultArg genus-name="number" label="5" />
                </BlockConnector>
                <BlockConnector connector-type="number" connector-kind="socket" label="bc.tab">
                    <DefaultArg genus-name="number" label="0" />
                </BlockConnector>
            </BlockConnectors>
        </BlockGenus>

        <!-- ******************** LCD *************** -->

        <BlockGenus name="LCD_I2C_Sainsmart_20by4" kind="command" color="255 0 0" initlabel="bg.LCD_I2C_Sainsmart_20by4">
            <description>
                <text>20 Char by 4 Line LCD display</text>
            </description>			
            <BlockConnectors>
                <BlockConnector connector-type="string" connector-kind="socket" label="bc.print">
                    <DefaultArg genus-name="message" label="Sainsmart LCD. I2C"/>
                </BlockConnector>
                <BlockConnector connector-type="number" connector-kind="socket" label="bc.line_number">
                    <DefaultArg genus-name="number" label="1" />
                </BlockConnector>
                <BlockConnector connector-type="number" connector-kind="socket" label="bc.character_number">
                    <DefaultArg genus-name="number" label="1" />
                </BlockConnector>
                <BlockConnector connector-type="number-list" connector-kind="socket" label="bc.device_address_I2C">
                    <DefaultArg genus-name="number-single" label="3F"/>
                </BlockConnector>
            </BlockConnectors>
            <Images>
                <Image>
                    <FileLocation>com/ardublock/block/LCD20by4.png</FileLocation>
                </Image>
            </Images>
        </BlockGenus>

        <BlockGenus name="LCD_I2C_Sainsmart_16by2" kind="command" color="255 0 0" initlabel="bg.LCD_I2C_Sainsmart_16by2">
            <description>
                <text>16 Char by 2 Line LCD display</text>
            </description>			
            <BlockConnectors>
                <BlockConnector connector-type="string" connector-kind="socket" label="bc.print">
                    <DefaultArg genus-name="message" label="Sainsmart LCD. I2C"/>
                </BlockConnector>
                <BlockConnector connector-type="number" connector-kind="socket" label="bc.line_number">
                    <DefaultArg genus-name="number" label="1" />
                </BlockConnector>
                <BlockConnector connector-type="number" connector-kind="socket" label="bc.character_number">
                    <DefaultArg genus-name="number" label="1" />
                </BlockConnector>
                <BlockConnector connector-type="number-list" connector-kind="socket" label="bc.device_address_I2C">
                    <DefaultArg genus-name="number-single" label="3F"/>
                </BlockConnector>
            </BlockConnectors>
            <Images>
                <Image>
                    <FileLocation>com/ardublock/block/LCD20by4.png</FileLocation>
                </Image>
            </Images>
        </BlockGenus>

        <BlockGenus name="LCD_PLL_Sainsmart_16by2" kind="command" color="255 0 0" initlabel="bg.LCD_PLL_Sainsmart_16by2">
            <description>
                <text>16 Char by 2 Line LCD display</text>
            </description>
            <BlockConnectors>
                <BlockConnector connector-type="string" connector-kind="socket" label="bc.print">
                    <DefaultArg genus-name="message" label="SainsmartLCD Parallel"/>
                </BlockConnector>
                <BlockConnector connector-type="number" connector-kind="socket" label="bc.line_number">
                    <DefaultArg genus-name="number" label="1" />
                </BlockConnector>
                <BlockConnector connector-type="number" connector-kind="socket" label="bc.character_number">
                    <DefaultArg genus-name="number" label="1" />
                </BlockConnector>
                <BlockConnector connector-type="number-list" connector-kind="socket" label="bc.device_address_I2C">
                    <DefaultArg genus-name="number-single-fixed-parallel" label="Parallel"/>
                </BlockConnector>
            </BlockConnectors>
            <Images>
                <Image>
                    <FileLocation>com/ardublock/block/LCD16by2.png</FileLocation>
                </Image>
            </Images>
        </BlockGenus>

        <BlockGenus name="LCD_command_clear" kind="command" color="255 0 0" label-prefix="LCD::  " initlabel="bg.LCD_command_clear">
            <description>
                <text>Clear LCD</text>
            </description>
            <BlockConnectors>
                <BlockConnector connector-type="number-list" connector-kind="socket" label="bc.device_address_I2C">
                    <DefaultArg genus-name="number-single" label="3F"/>
                </BlockConnector>
            </BlockConnectors>
        </BlockGenus>

        <BlockGenus name="LCD_command_home" kind="command" color="255 0 0" label-prefix="LCD::  " initlabel="bg.LCD_command_home">
            <description>
                <text>Home LCD</text>
            </description>
            <BlockConnectors>
                <BlockConnector connector-type="number-list" connector-kind="socket" label="bc.device_address_I2C">
                    <DefaultArg genus-name="number-single" label="3F"/>
                </BlockConnector>
            </BlockConnectors>
        </BlockGenus>

        <BlockGenus name="LCD_command_lightOn" kind="command" color="255 0 0" label-prefix="LCD::  " initlabel="bg.LCD_command_lightOn">
            <description>
                <text>Home LCD</text>
            </description>
            <BlockConnectors>
                <BlockConnector connector-type="number-list" connector-kind="socket" label="bc.device_address_I2C">
                    <DefaultArg genus-name="number-single" label="3F"/>
                </BlockConnector>
            </BlockConnectors>
        </BlockGenus>

        <BlockGenus name="LCD_command_lightOff" kind="command" color="255 0 0" label-prefix="LCD::  " initlabel="bg.LCD_command_lightOff">
            <description>
                <text>Home LCD</text>
            </description>
            <BlockConnectors>
                <BlockConnector connector-type="number-list" connector-kind="socket" label="bc.device_address_I2C">
                    <DefaultArg genus-name="number-single" label="3F"/>
                </BlockConnector>
            </BlockConnectors>
        </BlockGenus>

        <BlockGenus name="LCD_command_cursorOn" kind="command" color="255 0 0" label-prefix="LCD::  " initlabel="bg.LCD_command_cursorOn">
            <description>
                <text>Home LCD</text>
            </description>
            <BlockConnectors>
                <BlockConnector connector-type="number-list" connector-kind="socket" label="bc.device_address_I2C">
                    <DefaultArg genus-name="number-single" label="3F"/>
                </BlockConnector>
            </BlockConnectors>
        </BlockGenus>

        <BlockGenus name="LCD_command_cursorOff" kind="command" color="255 0 0" label-prefix="LCD::  " initlabel="bg.LCD_command_cursorOff">
            <description>
                <text>Home LCD</text>
            </description>
            <BlockConnectors>
                <BlockConnector connector-type="number-list" connector-kind="socket" label="bc.device_address_I2C">
                    <DefaultArg genus-name="number-single" label="3F"/>
                </BlockConnector>
            </BlockConnectors>
        </BlockGenus>

        <BlockGenus name="LCD_command_blinkOn" kind="command" color="255 0 0" label-prefix="LCD::  " initlabel="bg.LCD_command_blinkOn">
            <description>
                <text>Home LCD</text>
            </description>
            <BlockConnectors>
                <BlockConnector connector-type="number-list" connector-kind="socket" label="bc.device_address_I2C">
                    <DefaultArg genus-name="number-single" label="3F"/>
                </BlockConnector>
            </BlockConnectors>
        </BlockGenus>

        <BlockGenus name="LCD_command_blinkOff" kind="command" color="255 0 0" label-prefix="LCD::  " initlabel="bg.LCD_command_blinkOff">
            <description>
                <text>Home LCD</text>
            </description>
            <BlockConnectors>
                <BlockConnector connector-type="number-list" connector-kind="socket" label="bc.device_address_I2C">
                    <DefaultArg genus-name="number-single" label="3F"/>
                </BlockConnector>
            </BlockConnectors>
        </BlockGenus>
        
        <!-- ******************** SENSORES TEMP *************** -->

        <BlockGenus name="DS18B20" kind="data" color="255 0 0" initlabel="sensoresTemp.DS18B20">
            <description>
                <text>Ler Sensor de Temperatura digital</text>
            </description>			
            <BlockConnectors>
                <BlockConnector connector-type="number" connector-kind="socket" label="bc.portaSensor">
                    <DefaultArg genus-name="E01" label="Entrada 1"/>
                </BlockConnector>
                <BlockConnector connector-type="number" connector-kind="plug" />
            </BlockConnectors>
        </BlockGenus>
		
		<BlockGenus name="LM35" kind="data" color="255 0 0" initlabel="sensoresTemp.LM35">
            <description>
                <text>Ler Sensor de Temperatura Analogico LM75</text>
            </description>			
            <BlockConnectors>
                <BlockConnector connector-type="number" connector-kind="socket" label="bc.portaSensor">
                    <DefaultArg genus-name="E01" label="Entrada 1"/>
                </BlockConnector>
                <BlockConnector connector-type="number" connector-kind="plug" />
            </BlockConnectors>
        </BlockGenus>
        
        <BlockGenus name="actionTemperature" kind="command" color="255 0 0" initlabel="bg.actionTemperature">
            <description>
                <text>Efetua uma ação com base na temperatura do sensor</text>
            </description>			
            <BlockConnectors>
                <BlockConnector label="bc.test" connector-kind="socket" connector-type="boolean" >
                    <DefaultArg genus-name="tempSensorMaior" label=">"/>
                </BlockConnector>
                <BlockConnector label="bc.then" connector-kind="socket" connector-type="cmd" />
            </BlockConnectors>
        </BlockGenus>
        
        <BlockGenus name="tempSensorMaior" kind="function" color="127 255 0" initlabel="bg.tempSensorMaior">
            <description>
                <text>is upper number greater then lower?</text>
            </description>
            <BlockConnectors>
                <BlockConnector connector-type="boolean" connector-kind="plug" position-type="mirror" >
                    <!-- CLUDGE:: This apparently daft line enables 'clone' to work correctly on this BlockGenus -->
                    <DefaultArg genus-name="dummy" label="" />
                </BlockConnector>
                <BlockConnector connector-type="number" connector-kind="socket" position-type="bottom" >
                    <DefaultArg genus-name="DS18B20" label="DS18B20"/>
                </BlockConnector>
                <BlockConnector connector-type="number" connector-kind="socket" position-type="bottom" >
                    <DefaultArg genus-name="number" label="0"/>
                </BlockConnector>
            </BlockConnectors>
        </BlockGenus>
        
        <BlockGenus name="tempSensorMenor" kind="function" color="127 255 0" initlabel="bg.tempSensorMenor">
            <description>
                <text>is upper number greater then lower?</text>
            </description>
            <BlockConnectors>
                <BlockConnector connector-type="boolean" connector-kind="plug" position-type="mirror" >
                    <!-- CLUDGE:: This apparently daft line enables 'clone' to work correctly on this BlockGenus -->
                    <DefaultArg genus-name="dummy" label="" />
                </BlockConnector>
                <BlockConnector connector-type="number" connector-kind="socket" position-type="bottom" >
                    <DefaultArg genus-name="DS18B20" label="DS18B20"/>
                </BlockConnector>
                <BlockConnector connector-type="number" connector-kind="socket" position-type="bottom" >
                    <DefaultArg genus-name="number" label="0"/>
                </BlockConnector>
            </BlockConnectors>
        </BlockGenus>
        
        <BlockGenus name="tempSensorMaiorOuIgual" kind="function" color="127 255 0" initlabel="bg.tempSensorMaiorOuIgual">
            <description>
                <text>is upper number greater then lower?</text>
            </description>
            <BlockConnectors>
                <BlockConnector connector-type="boolean" connector-kind="plug" position-type="mirror" >
                    <!-- CLUDGE:: This apparently daft line enables 'clone' to work correctly on this BlockGenus -->
                    <DefaultArg genus-name="dummy" label="" />
                </BlockConnector>
                <BlockConnector connector-type="number" connector-kind="socket" position-type="bottom" >
                    <DefaultArg genus-name="DS18B20" label="DS18B20"/>
                </BlockConnector>
                <BlockConnector connector-type="number" connector-kind="socket" position-type="bottom" >
                    <DefaultArg genus-name="number" label="0"/>
                </BlockConnector>
            </BlockConnectors>
        </BlockGenus>
        
        <BlockGenus name="tempSensorMenorOuIgual" kind="function" color="127 255 0" initlabel="bg.tempSensorMenorOuIgual">
            <description>
                <text>is upper number greater then lower?</text>
            </description>
            <BlockConnectors>
                <BlockConnector connector-type="boolean" connector-kind="plug" position-type="mirror" >
                    <!-- CLUDGE:: This apparently daft line enables 'clone' to work correctly on this BlockGenus -->
                    <DefaultArg genus-name="dummy" label="" />
                </BlockConnector>
                <BlockConnector connector-type="number" connector-kind="socket" position-type="bottom" >
                    <DefaultArg genus-name="DS18B20" label="DS18B20"/>
                </BlockConnector>
                <BlockConnector connector-type="number" connector-kind="socket" position-type="bottom" >
                    <DefaultArg genus-name="number" label="0"/>
                </BlockConnector>
            </BlockConnectors>
        </BlockGenus>
        
        <BlockGenus name="tempSensorIgual" kind="function" color="127 255 0" initlabel="bg.tempSensorIgual">
            <description>
                <text>is upper number greater then lower?</text>
            </description>
            <BlockConnectors>
                <BlockConnector connector-type="boolean" connector-kind="plug" position-type="mirror" >
                    <!-- CLUDGE:: This apparently daft line enables 'clone' to work correctly on this BlockGenus -->
                    <DefaultArg genus-name="dummy" label="" />
                </BlockConnector>
                <BlockConnector connector-type="number" connector-kind="socket" position-type="bottom" >
                    <DefaultArg genus-name="DS18B20" label="DS18B20"/>
                </BlockConnector>
                <BlockConnector connector-type="number" connector-kind="socket" position-type="bottom" >
                    <DefaultArg genus-name="number" label="0"/>
                </BlockConnector>
            </BlockConnectors>
        </BlockGenus>
        
        <BlockGenus name="tempSensorDiferente" kind="function" color="127 255 0" initlabel="bg.tempSensorDiferente">
            <description>
                <text>is upper number greater then lower?</text>
            </description>
            <BlockConnectors>
                <BlockConnector connector-type="boolean" connector-kind="plug" position-type="mirror" >
                    <!-- CLUDGE:: This apparently daft line enables 'clone' to work correctly on this BlockGenus -->
                    <DefaultArg genus-name="dummy" label="" />
                </BlockConnector>
                <BlockConnector connector-type="number" connector-kind="socket" position-type="bottom" >
                    <DefaultArg genus-name="DS18B20" label="DS18B20"/>
                </BlockConnector>
                <BlockConnector connector-type="number" connector-kind="socket" position-type="bottom" >
                    <DefaultArg genus-name="number" label="0"/>
                </BlockConnector>
            </BlockConnectors>
        </BlockGenus>

        <!-- ******************** Special Menu *************** -->

        <BlockGenus name="code_head" kind="command" color="125 125 125" initlabel="bg.code_head">
            <description>
                <text>send message via Serial port</text>
            </description>
            <BlockConnectors>
                <BlockConnector connector-type="string" connector-kind="socket">
                    <DefaultArg genus-name="glue_msg" label="Code" />
                </BlockConnector>
            </BlockConnectors>
        </BlockGenus>

        <BlockGenus name="code_setup" kind="command" color="125 125 125" initlabel="bg.code_setup">
            <description>
                <text>send message via Serial port</text>
            </description>
            <BlockConnectors>
                <BlockConnector connector-type="string" connector-kind="socket">
                    <DefaultArg genus-name="glue_msg" label="Code" />
                </BlockConnector>
            </BlockConnectors>
        </BlockGenus>

        <BlockGenus name="code_loop" kind="command" color="125 125 125" initlabel="bg.code_loop">
            <description>
                <text>send message via Serial port</text>
            </description>
            <BlockConnectors>
                <BlockConnector connector-type="string" connector-kind="socket">
                    <DefaultArg genus-name="glue_msg" label="Code" />
                </BlockConnector>
            </BlockConnectors>
        </BlockGenus>

        <!-- ******************** Unused/Obsoletes *************** -->

        <BlockGenus name="glue_msg" kind="data" color="245 245 245" initlabel="bg.glue_msg" editable-label="yes">
            <description>
                <text></text>
            </description>
            <BlockConnectors>
                <BlockConnector connector-type="string" connector-kind="plug" />
                <BlockConnector connector-type="string" connector-kind="plug" />
            </BlockConnectors>
        </BlockGenus>

        <BlockGenus name="variable_fake" kind="data" initlabel="bg.fake" editable-label="yes" is-label-value="yes" color="204 51 0">
            <description>
                <text>
                    Digital Var
                </text>
            </description>
            <BlockConnectors>
                <BlockConnector connector-type="number" connector-kind="plug" position-type="mirror" />
            </BlockConnectors>
        </BlockGenus>

        <BlockGenus name="digital-on" kind="data" color="204 153 255" initlabel="bg.digital-on">
            <BlockConnectors>
                <BlockConnector connector-type="boolean" connector-kind="plug" position-type="mirror" />
            </BlockConnectors>
        </BlockGenus>

        <BlockGenus name="digital-off" kind="data" color="204 153 255" initlabel="bg.digital-off">
            <BlockConnectors>
                <BlockConnector connector-type="boolean" connector-kind="plug" position-type="mirror" />
            </BlockConnectors>
        </BlockGenus>

        <BlockGenus name="port_pin_name" kind="data" color="246 220 169" initlabel="bg.port_pin_name" editable-label="yes">
            <description>
                <text>
                    Pin name
                </text>
            </description>
            <BlockConnectors>
                <BlockConnector connector-type="poly" connector-kind="plug" position-type="single" />
            </BlockConnectors>
        </BlockGenus>

        <!--****************** ????? *************** -->
		
        <BlockGenus name="string_greater" kind="data" color="222 131 51" initlabel="bg.string_greater">
            <description>
                <text>is upper string greater then lower?</text>
            </description>
            <BlockConnectors>
                <BlockConnector connector-kind="plug" connector-type="boolean" />
                <BlockConnector connector-type="string" connector-kind="socket" >
                    <DefaultArg genus-name="message" label="message"/>
                </BlockConnector>
                <BlockConnector connector-type="string" connector-kind="socket" >
                    <DefaultArg genus-name="message" label="message"/>
                </BlockConnector>
            </BlockConnectors>
        </BlockGenus>

        <BlockGenus name="string_less" kind="data" color="222 131 51" initlabel="bg.string_less">
            <description>
                <text>is upper string less then lower?</text>
            </description>
            <BlockConnectors>
                <BlockConnector connector-kind="plug" connector-type="boolean" />
                <BlockConnector connector-type="string" connector-kind="socket" >
                    <DefaultArg genus-name="message" label="message"/>
                </BlockConnector>
                <BlockConnector connector-type="string" connector-kind="socket" >
                    <DefaultArg genus-name="message" label="message"/>
                </BlockConnector>
            </BlockConnectors>
        </BlockGenus>

        <BlockGenus name="string_greater_equal" kind="data" color="222 131 51" initlabel="bg.string_greater_equal">
            <description>
                <text>is upper string greater then lower?</text>
            </description>
            <BlockConnectors>
                <BlockConnector connector-kind="plug" connector-type="boolean" />
                <BlockConnector connector-type="string" connector-kind="socket" >
                    <DefaultArg genus-name="message" label="message"/>
                </BlockConnector>
                <BlockConnector connector-type="string" connector-kind="socket" >
                    <DefaultArg genus-name="message" label="message"/>
                </BlockConnector>
            </BlockConnectors>
        </BlockGenus>

        <BlockGenus name="string_less_equal" kind="data" color="222 131 51" initlabel="bg.string_less_equal">
            <description>
                <text>is upper string greater then lower?</text>
            </description>
            <BlockConnectors>
                <BlockConnector connector-kind="plug" connector-type="boolean" />
                <BlockConnector connector-type="string" connector-kind="socket" >
                    <DefaultArg genus-name="message" label="message"/>
                </BlockConnector>
                <BlockConnector connector-type="string" connector-kind="socket" >
                    <DefaultArg genus-name="message" label="message"/>
                </BlockConnector>
            </BlockConnectors>
        </BlockGenus>

        <BlockGenus name="string_not_equal" kind="data" color="222 131 51" initlabel="bg.string_not_equal">
            <description>
                <text>is upper string greater then lower?</text>
            </description>
            <BlockConnectors>
                <BlockConnector connector-kind="plug" connector-type="boolean" />
                <BlockConnector connector-type="string" connector-kind="socket" >
                    <DefaultArg genus-name="message" label="message"/>
                </BlockConnector>
                <BlockConnector connector-type="string" connector-kind="socket" >
                    <DefaultArg genus-name="message" label="message"/>
                </BlockConnector>
            </BlockConnectors>
        </BlockGenus>

        <BlockGenus name="string_equalsIgnoreCase" kind="data" color="222 131 51" initlabel="bg.string_equalsIgnoreCase">
            <description>
                <text>is equalsIgnoreCase then lower?</text>
            </description>
            <BlockConnectors>
                <BlockConnector connector-kind="plug" connector-type="boolean" />
                <BlockConnector connector-type="string" connector-kind="socket" >
                    <DefaultArg genus-name="message" label="message"/>
                </BlockConnector>
                <BlockConnector connector-type="string" connector-kind="socket" >
                    <DefaultArg genus-name="message" label="message"/>
                </BlockConnector>
            </BlockConnectors>
        </BlockGenus>

        <BlockGenus name="string_equals" kind="data" color="222 131 51" initlabel="bg.string_equals">
            <description>
                <text>is equals then ?</text>
            </description>
            <BlockConnectors>
                <BlockConnector connector-kind="plug" connector-type="boolean" />
                <BlockConnector connector-type="string" connector-kind="socket" >
                    <DefaultArg genus-name="message" label="message"/>
                </BlockConnector>
                <BlockConnector connector-type="string" connector-kind="socket" >
                    <DefaultArg genus-name="message" label="message"/>
                </BlockConnector>
            </BlockConnectors>
        </BlockGenus>

        <BlockGenus name="string_compareTo" kind="data" color="222 131 51" initlabel="bg.string_compareTo">
            <description>
                <text>is compareTo ?</text>
            </description>
            <BlockConnectors>
                <BlockConnector connector-kind="plug" connector-type="boolean" />
                <BlockConnector connector-type="string" connector-kind="socket" >
                    <DefaultArg genus-name="message" label="message"/>
                </BlockConnector>
                <BlockConnector connector-type="string" connector-kind="socket" >
                    <DefaultArg genus-name="message" label="message"/>
                </BlockConnector>
            </BlockConnectors>
        </BlockGenus>

        <BlockGenus name="random" kind="data" color="149 193 31" initlabel="bg.random">
            <description>
                <text>generate a random number less than the number</text>
            </description>
            <BlockConnectors>
                <BlockConnector connector-type="number" connector-kind="plug" />
                <BlockConnector connector-type="number" connector-kind="socket" label="bc.max">
                    <DefaultArg genus-name="number" label="1024" />
                </BlockConnector>
            </BlockConnectors>
        </BlockGenus>

        <BlockGenus name="min" kind="function" color="149 193 31" initlabel="bg.min">
            <BlockConnectors>
                <BlockConnector connector-type="number" connector-kind="plug" position-type="mirror" >
                    <!-- CLUDGE:: This apparently daft line enables 'clone' to work correctly on this BlockGenus -->
                    <DefaultArg genus-name="dummy" label="" />
                </BlockConnector>
                <BlockConnector connector-type="number" connector-kind="socket" position-type="bottom" />
                <BlockConnector connector-type="number" connector-kind="socket" position-type="bottom" />
            </BlockConnectors>
        </BlockGenus>

        <BlockGenus name="max" kind="function" color="149 193 31" initlabel="bg.max">
            <BlockConnectors>
                <BlockConnector connector-type="number" connector-kind="plug" position-type="mirror" >
                    <!-- CLUDGE:: This apparently daft line enables 'clone' to work correctly on this BlockGenus -->
                    <DefaultArg genus-name="dummy" label="" />
                </BlockConnector>
                <BlockConnector connector-type="number" connector-kind="socket" position-type="bottom" />
                <BlockConnector connector-type="number" connector-kind="socket" position-type="bottom" />
            </BlockConnectors>
        </BlockGenus>

        <BlockGenus name="map_common" kind="data" color="149 193 31" initlabel="bg.map_common">
            <description>
                <text>map value from [0, 1023] to [0, 255]</text>
            </description>
            <BlockConnectors>
                <BlockConnector connector-type="number" connector-kind="plug" />
                <BlockConnector connector-type="number" connector-kind="socket" label="bc.value">
                    <DefaultArg genus-name="number" label="1" />
                </BlockConnector>
            </BlockConnectors>
        </BlockGenus>

        <BlockGenus name="LEVEL1" kind="data" color="214 169 54" initlabel="bg.LEVEL1" editable-label="no">
            <BlockConnectors>
                <BlockConnector connector-type="boolean" connector-kind="plug"/>
            </BlockConnectors>		
        </BlockGenus>
        <BlockGenus name="LEVEL0" kind="data" color="214 169 54" initlabel="bg.LEVEL0" editable-label="no">
            <BlockConnectors>
                <BlockConnector connector-type="boolean" connector-kind="plug"/>
            </BlockConnectors>		
        </BlockGenus>

        <BlockGenus name="number_long" kind="data" color="255 153 204 " initlabel="bg.number_long" editable-label="yes">
            <description>
                <text>
                    'Unsigned Long' constant
                </text>
            </description>
            <BlockConnectors>
                <BlockConnector connector-type="number" connector-kind="plug" position-type="mirror" />
            </BlockConnectors>
        </BlockGenus>

        <BlockGenus name="number-single" kind="data" color="205 133 63" initlabel="bg.number-single" editable-label="yes" is-label-value="yes">
            <BlockConnectors>
                <BlockConnector connector-type="number-list" connector-kind="plug" position-type="single" />
            </BlockConnectors>
        </BlockGenus>

        <BlockGenus name="number-single-fixed-parallel" kind="data" color="205 133 63" initlabel="Parallel" editable-label="no" is-label-value="yes">
            <BlockConnectors>
                <BlockConnector connector-type="number-list" connector-kind="plug" position-type="single" />
            </BlockConnectors>
        </BlockGenus>

        <BlockGenus name="number-single-I2C-address" kind="data" color="205 133 63" initlabel="bg.number-single-I2C-address" editable-label="yes" is-label-value="yes">
            <BlockConnectors>
                <BlockConnector connector-type="number-list" connector-kind="plug" position-type="single" />
            </BlockConnectors>
        </BlockGenus>

        <BlockGenus name="variable_string" kind="data" color="32 102 204" initlabel="bg.variable_string" editable-label="yes">
            <description>
                <text>string message</text>
            </description>
            <BlockConnectors>
                <BlockConnector connector-type="string" connector-kind="plug" />
            </BlockConnectors>
        </BlockGenus>

        <BlockGenus name="serial_read_poly" kind="data" color="245 245 245" initlabel="bg.serial_read">
            <BlockConnectors>
                <BlockConnector connector-type="poly" connector-kind="plug" position-type="mirror" />
            </BlockConnectors>
        </BlockGenus>

    </BlockGenuses>

    <BlockFamilies>
        <BlockFamily>
            <FamilyMember>digital-high</FamilyMember>
            <FamilyMember>digital-low</FamilyMember>
        </BlockFamily>
        <BlockFamily>
            <FamilyMember>and</FamilyMember>
            <FamilyMember>or</FamilyMember>
        </BlockFamily>
        <BlockFamily>
            <FamilyMember>true</FamilyMember>
            <FamilyMember>false</FamilyMember>
        </BlockFamily>
        <BlockFamily>
            <FamilyMember>addition</FamilyMember>
            <FamilyMember>subtraction</FamilyMember>
            <FamilyMember>multiplication</FamilyMember>
            <FamilyMember>division</FamilyMember>
            <FamilyMember>modulo</FamilyMember>
        </BlockFamily>
        <BlockFamily>
            <FamilyMember>min</FamilyMember>
            <FamilyMember>max</FamilyMember>
        </BlockFamily>
        <BlockFamily>
            <FamilyMember>greater</FamilyMember>
            <FamilyMember>less</FamilyMember>
            <FamilyMember>equal</FamilyMember>
            <FamilyMember>greater_equal</FamilyMember>
            <FamilyMember>less_equal</FamilyMember>
            <FamilyMember>not_equal</FamilyMember>
        </BlockFamily>
        <BlockFamily>
            <FamilyMember>tempSensorMaior</FamilyMember>
            <FamilyMember>tempSensorMenor</FamilyMember>
            <FamilyMember>tempSensorIgual</FamilyMember>
            <FamilyMember>tempSensorMaiorOuIgual</FamilyMember>
            <FamilyMember>tempSensorMenorOuIgual</FamilyMember>
            <FamilyMember>tempSensorDiferente</FamilyMember>
        </BlockFamily>
        <BlockFamily>
            <FamilyMember>DS18B20</FamilyMember>
            <FamilyMember>LM35</FamilyMember>
        </BlockFamily>
        <BlockFamily>
            <FamilyMember>equal_digital</FamilyMember>
            <FamilyMember>not_equal_digital</FamilyMember>
        </BlockFamily>
        <BlockFamily>
            <FamilyMember>equal_poly</FamilyMember>
            <FamilyMember>not_equal_poly</FamilyMember>
        </BlockFamily>
        <BlockFamily>
            <FamilyMember>string_greater</FamilyMember>
            <FamilyMember>string_less</FamilyMember>
            <FamilyMember>string_equal</FamilyMember>
            <FamilyMember>string_greater_equal</FamilyMember>
            <FamilyMember>string_less_equal</FamilyMember>
            <FamilyMember>string_not_equal</FamilyMember>
            <FamilyMember>string_equals</FamilyMember>
            <FamilyMember>string_equalsIgnoreCase</FamilyMember>
            <FamilyMember>string_compareTo</FamilyMember>
        </BlockFamily>
        <BlockFamily>
            <FamilyMember>equal_string</FamilyMember>
            <FamilyMember>not_equal_string</FamilyMember>
        </BlockFamily>
        <BlockFamily>
            <FamilyMember>sin</FamilyMember>
            <FamilyMember>cos</FamilyMember>
            <FamilyMember>tan</FamilyMember>
        </BlockFamily>
        <BlockFamily>
            <FamilyMember>code_head</FamilyMember>
            <FamilyMember>code_setup</FamilyMember>
            <FamilyMember>code_loop</FamilyMember>
        </BlockFamily>
        <BlockFamily>
            <FamilyMember>digital-on</FamilyMember>
            <FamilyMember>digital-off</FamilyMember>
        </BlockFamily>
        <BlockFamily>
            <FamilyMember>LCD_I2C_Sainsmart_20by4</FamilyMember>
            <FamilyMember>LCD_I2C_Sainsmart_16by2</FamilyMember>
        </BlockFamily>
        <BlockFamily>
            <FamilyMember>LCD_command_clear</FamilyMember>
            <FamilyMember>LCD_command_home</FamilyMember>
            <FamilyMember>LCD_command_lightOff</FamilyMember>
            <FamilyMember>LCD_command_lightOn</FamilyMember>
            <FamilyMember>LCD_command_cursorOn</FamilyMember>
            <FamilyMember>LCD_command_cursorOff</FamilyMember>
            <FamilyMember>LCD_command_blinkOn</FamilyMember>
            <FamilyMember>LCD_command_blinkOff</FamilyMember>
        </BlockFamily>
        <BlockFamily>
            <FamilyMember>servo_default</FamilyMember>
            <FamilyMember>servo_sg90</FamilyMember>
            <FamilyMember>servo_mg996r</FamilyMember>
        </BlockFamily>
        <BlockFamily>
            <FamilyMember>DDRA</FamilyMember>
            <FamilyMember>DDRB</FamilyMember>
            <FamilyMember>DDRC</FamilyMember>
            <FamilyMember>DDRD</FamilyMember>
            <FamilyMember>DDRH</FamilyMember>
            <FamilyMember>DDRL</FamilyMember>
        </BlockFamily>
        <BlockFamily>
            <FamilyMember>PORTA</FamilyMember>
            <FamilyMember>PORTB</FamilyMember>
            <FamilyMember>PORTC</FamilyMember>
            <FamilyMember>PORTD</FamilyMember>
            <FamilyMember>PORTH</FamilyMember>
            <FamilyMember>PORTL</FamilyMember>
        </BlockFamily>
        <BlockFamily>
            <FamilyMember>PORTA2</FamilyMember>
            <FamilyMember>PORTB2</FamilyMember>
            <FamilyMember>PORTC2</FamilyMember>
            <FamilyMember>PORTD2</FamilyMember>
            <FamilyMember>PORTH2</FamilyMember>
            <FamilyMember>PORTL2</FamilyMember>
        </BlockFamily>
        <BlockFamily>
            <FamilyMember>LEVEL1</FamilyMember>
            <FamilyMember>LEVEL0</FamilyMember>
        </BlockFamily>
        <BlockFamily>
            <FamilyMember>PINA</FamilyMember>
            <FamilyMember>PINB</FamilyMember>
            <FamilyMember>PINC</FamilyMember>
            <FamilyMember>PIND</FamilyMember>
            <FamilyMember>PINH</FamilyMember>
            <FamilyMember>PINL</FamilyMember>
        </BlockFamily>
        <BlockFamily>
            <FamilyMember>E01</FamilyMember>
            <FamilyMember>E02</FamilyMember>
            <FamilyMember>E03</FamilyMember>
            <FamilyMember>E04</FamilyMember>
            <FamilyMember>E05</FamilyMember>
            <FamilyMember>E06</FamilyMember>
        </BlockFamily>
    </BlockFamilies>

    <BlockDrawerSets>
        <BlockDrawerSet name="factory" type="stack" location="southwest" window-per-drawer="no" drawer-draggable="no">
            <BlockDrawer button-color = "255 127   0" type="factory" name="bd.functions" is-open="yes">
                <BlockGenusMember>setup</BlockGenusMember>
                <BlockGenusMember>setupWifi</BlockGenusMember>
                <BlockGenusMember>loop</BlockGenusMember>
                <BlockGenusMember>subroutine</BlockGenusMember>
                <BlockGenusMember>subroutine-ref</BlockGenusMember>
                <BlockGenusMember>subroutine_var</BlockGenusMember>
                <BlockGenusMember>subroutine-ref_var</BlockGenusMember>
                <BlockGenusMember>ref_var</BlockGenusMember>
            </BlockDrawer>
            <BlockDrawer button-color = "255 255   0" type="factory" name="bd.control" is-open="yes">
                <BlockGenusMember>if</BlockGenusMember>
                <BlockGenusMember>ifelse</BlockGenusMember>
                <BlockGenusMember>while</BlockGenusMember>
                <BlockGenusMember>do_while</BlockGenusMember>
                <BlockGenusMember>repeat_times</BlockGenusMember>
                <BlockGenusMember>repeat</BlockGenusMember>
                <BlockGenusMember>repeat_control</BlockGenusMember>
                <BlockGenusMember>break</BlockGenusMember>
            </BlockDrawer>
            <BlockDrawer button-color = "127 255   0" type="factory" name="bd.logic">
                <BlockGenusMember>true</BlockGenusMember>
                <BlockGenusMember>false</BlockGenusMember>
                <BlockGenusMember>greater</BlockGenusMember>
                <BlockGenusMember>less</BlockGenusMember>
                <BlockGenusMember>equal</BlockGenusMember>
                <BlockGenusMember>greater_equal</BlockGenusMember>
                <BlockGenusMember>less_equal</BlockGenusMember>
                <BlockGenusMember>not_equal</BlockGenusMember>
                <BlockGenusMember>equal_digital</BlockGenusMember>
                <BlockGenusMember>not_equal_digital</BlockGenusMember>
                <BlockGenusMember>equal_poly</BlockGenusMember>
                <BlockGenusMember>not_equal_poly</BlockGenusMember>
                <BlockGenusMember>equal_string</BlockGenusMember>
                <BlockGenusMember>not_equal_string</BlockGenusMember>
                <BlockGenusMember>and</BlockGenusMember>
                <BlockGenusMember>or</BlockGenusMember>
                <BlockGenusMember>not</BlockGenusMember>
                <BlockGenusMember>string_equal</BlockGenusMember>
                <BlockGenusMember>string_empty</BlockGenusMember>
                <BlockGenusMember>string_toInt</BlockGenusMember>
            </BlockDrawer>
            <BlockDrawer button-color = "  0 255   0" type="factory" name="bd.operators">
                <BlockGenusMember>addition</BlockGenusMember>
                <BlockGenusMember>subtraction</BlockGenusMember>
                <BlockGenusMember>multiplication</BlockGenusMember>
                <BlockGenusMember>division</BlockGenusMember>
                <BlockGenusMember>modulo</BlockGenusMember>
                <BlockGenusMember>abs</BlockGenusMember>
                <BlockGenusMember>pow</BlockGenusMember>
                <BlockGenusMember>sqrt</BlockGenusMember>
                <BlockGenusMember>sin</BlockGenusMember>
                <BlockGenusMember>cos</BlockGenusMember>
                <BlockGenusMember>tan</BlockGenusMember>
                <BlockGenusMember>random_range</BlockGenusMember>
                <BlockGenusMember>map</BlockGenusMember>
                <BlockGenusMember>toint</BlockGenusMember>
                <BlockGenusMember>constrain</BlockGenusMember>
            </BlockDrawer>
            <BlockDrawer button-color = "  0 255 127" type="factory" name="bd.pins">
                <BlockGenusMember>pin-read-digital</BlockGenusMember>
                <BlockGenusMember>pin-read-analog</BlockGenusMember>
                <BlockGenusMember>pin-write-digital</BlockGenusMember>
                <BlockGenusMember>pin-write-analog</BlockGenusMember>
                <BlockGenusMember>pin-toggle</BlockGenusMember>
                <BlockGenusMember>tone</BlockGenusMember>
                <BlockGenusMember>tone_time</BlockGenusMember>
                <BlockGenusMember>no_tone</BlockGenusMember>
                <BlockGenusMember>DDRA</BlockGenusMember>
                <BlockGenusMember>PORTA</BlockGenusMember>
                <BlockGenusMember>PORT_FIX</BlockGenusMember>
                <BlockGenusMember>PINA</BlockGenusMember>
                <BlockGenusMember>E01</BlockGenusMember>
            </BlockDrawer>
            <BlockDrawer button-color = "  0 135 135" type="factory" name="bd.number">
                <BlockGenusMember>number</BlockGenusMember>
                <BlockGenusMember>setter_variable_number</BlockGenusMember>
                <BlockGenusMember>variable_number</BlockGenusMember>
                <BlockGenusMember>setter_variable_number_unsigned_long</BlockGenusMember>
                <BlockGenusMember>variable_number_unsigned_long</BlockGenusMember>
                <BlockGenusMember>setter_variable_digital</BlockGenusMember>
                <BlockGenusMember>variable_digital</BlockGenusMember>
                <BlockGenusMember>digital-low</BlockGenusMember>
                <BlockGenusMember>digital-high</BlockGenusMember>
                <BlockGenusMember>setter_variable_number_double</BlockGenusMember>
                <BlockGenusMember>variable_number_double</BlockGenusMember>
                <BlockGenusMember>number_double</BlockGenusMember>
                <BlockGenusMember>setter_variable_char</BlockGenusMember>
                <BlockGenusMember>variable_poly</BlockGenusMember>
                <BlockGenusMember>char</BlockGenusMember>
                <BlockGenusMember>setter_variable_String</BlockGenusMember>
                <BlockGenusMember>variable_String</BlockGenusMember>
                <BlockGenusMember>message</BlockGenusMember>
                <BlockGenusMember>create_variable_vector</BlockGenusMember>
                <BlockGenusMember>variable_vector</BlockGenusMember>
                <BlockGenusMember>setter_variable_vector</BlockGenusMember>
            </BlockDrawer>
            <BlockDrawer button-color = "  0 255 255" type="factory" name="bd.time" is-open="yes">
                <BlockGenusMember>delay</BlockGenusMember>
                <BlockGenusMember>delay_microseconds</BlockGenusMember>
                <BlockGenusMember>millis</BlockGenusMember>
            </BlockDrawer>
            <BlockDrawer button-color = "  0 127 255" type="factory" name="bd.servo">
                <BlockGenusMember>servo_default</BlockGenusMember>
            </BlockDrawer>
            <BlockDrawer button-color = "  0   0 255" type="factory" name="bd.serial">
                <BlockGenusMember>serial_available</BlockGenusMember>
                <BlockGenusMember>serial_available2</BlockGenusMember>
                <BlockGenusMember>serial_read</BlockGenusMember>
                <BlockGenusMember>serial_parseInt</BlockGenusMember>
                <BlockGenusMember>serial_write</BlockGenusMember>
                <BlockGenusMember>serial_print</BlockGenusMember>
                <BlockGenusMember>serial_println</BlockGenusMember>
                <BlockGenusMember>glue_sn</BlockGenusMember>
                <BlockGenusMember>glue_sb</BlockGenusMember>
                <BlockGenusMember>glue_poly</BlockGenusMember>
                <BlockGenusMember>Serialplus_send_variable_number</BlockGenusMember>
                <BlockGenusMember>Serialplus_send_variable_digital</BlockGenusMember>
                <BlockGenusMember>Serialplus_receive_number</BlockGenusMember>
                <BlockGenusMember>Serialplus_receive_digital</BlockGenusMember>
            </BlockDrawer>
            <BlockDrawer button-color = "127   0 255" type="factory" name="bd.wire">
                <BlockGenusMember>wire_write</BlockGenusMember>
                <BlockGenusMember>wire_read</BlockGenusMember>
                <BlockGenusMember>wire_isread</BlockGenusMember>
            </BlockDrawer>
            <BlockDrawer button-color = "255   0 255" type="factory" name="bd.eeprom">
                <BlockGenusMember>eeprom_read_int</BlockGenusMember>
                <BlockGenusMember>eeprom_write_int</BlockGenusMember>
                <BlockGenusMember>eeprom_read_long</BlockGenusMember>
                <BlockGenusMember>eeprom_write_long</BlockGenusMember>
                <BlockGenusMember>eeprom_read</BlockGenusMember>
                <BlockGenusMember>eeprom_write</BlockGenusMember>
            </BlockDrawer>
            <BlockDrawer button-color = "255   0 127" type="factory" name="bd.sd">
                <BlockGenusMember>sd_write2</BlockGenusMember>
                <BlockGenusMember>MaSD_Connect</BlockGenusMember>
                <BlockGenusMember>MaSD_file</BlockGenusMember>
                <BlockGenusMember>MaSD_Write</BlockGenusMember>
                <BlockGenusMember>MaSD_NewLine</BlockGenusMember>
                <BlockGenusMember>MaSD_separator</BlockGenusMember>
            </BlockDrawer>
            <BlockDrawer button-color = "255   0   0" type="factory" name="bd.lcd">
                <BlockGenusMember>LCD_I2C_Sainsmart_20by4</BlockGenusMember>
                <BlockGenusMember>LCD_command_lightOff</BlockGenusMember>
                <BlockGenusMember>LCD_PLL_Sainsmart_16by2</BlockGenusMember>
                <BlockGenusMember>number-single-I2C-address</BlockGenusMember>
                <BlockGenusMember>number-single-fixed-parallel</BlockGenusMember>
            </BlockDrawer>
            <BlockDrawer button-color = "255   233   129" type="factory" name="bd.sensoresTemp">
                <BlockGenusMember>DS18B20</BlockGenusMember>
                <BlockGenusMember>LM35</BlockGenusMember>
                <BlockGenusMember>actionTemperature</BlockGenusMember>
            </BlockDrawer>
            <BlockDrawer button-color = "120 120 120" type="factory" name="bd.code" >
                <BlockGenusMember>code_head</BlockGenusMember>
                <BlockGenusMember>code_setup</BlockGenusMember>
                <BlockGenusMember>code_loop</BlockGenusMember>
            </BlockDrawer>

            <!-- Shapes are automatically loaded as blocks in the Shapes drawer (see slcodeblocks.ShapeBlocksGenerator for details) -->
            <!-- Sound blocks reside in the auto-generated String drawer. (see slcodeblocks.SoundBlocksGenerator for details) -->
        </BlockDrawerSet>
    </BlockDrawerSets>

    <Pages drawer-with-page="yes">
        <Page page-name="Main" page-width="400" page-color="40 40 40"/>
    </Pages>

    <TrashCan>
        <OpenTrashImage>com/ardublock/block/trash_open.png</OpenTrashImage>
        <ClosedTrashImage>com/ardublock/block/trash.png</ClosedTrashImage>
    </TrashCan>

</BlockLangDef>
	